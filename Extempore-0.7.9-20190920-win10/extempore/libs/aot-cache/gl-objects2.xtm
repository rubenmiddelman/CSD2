(sys:load "libs/base/base.xtm" 'quiet)
(sys:load "libs/external/gl.xtm" 'quiet)
(sys:load "libs/external/stb_image.xtm" 'quiet)
(sys:load-preload-check 'gl-objects2)
(define *xtmlib-gl-objects2-loaded* #t)
(define *xtmlib-gl-objects2-loaded-timer* (clock:clock))
(set! *impc:aot:prev-compiler-message-level* *impc:compiler:message:level*)
(set! *impc:compiler:message:level* 'low)

(print "Loading ")
(print-with-colors 'blue 'default #t (print 'xtmgl-objects2))
(print " library... ")
(llvm:compile-ir (sys:slurp-file "libs/aot-cache/xtmgl-objects2.ll"));; flush the JIT-compilation queue, so we only get this file's code in the module
(impc:compiler:flush-jit-compilation-queue)
(register-lib-func xtmgl-objects2 gl_print_error_adhoc_W3ZvaWQsaTgqXQ [void,i8*]* 0 "" '(let ((gl_print_error_adhoc_1 (lambda (msg:i8*) (let ((err (glGetError))) (cond ((= err GL_INVALID_ENUM) (printf "%s: Invalid Enum\n" msg)) ((= err GL_INVALID_VALUE) (printf "%s: Invalid Value\n" msg)) ((= err GL_INVALID_OPERATION) (printf "%s: Invalid Operation\n" msg)) ((= err GL_OUT_OF_MEMORY) (printf "%s: Out Of Memory\n" msg)) ((= err GL_INVALID_FRAMEBUFFER_OPERATION) (printf "%s: Invalid Framebuffer Operation\n" msg)) ((= err GL_NO_ERROR) 1:i32) (else (printf "%s\n" msg))) void)))) gl_print_error_adhoc_1))
(bind-poly gl_print_error gl_print_error_adhoc_W3ZvaWQsaTgqXQ "")
(register-lib-func xtmgl-objects2 gl_print_error_adhoc_W3ZvaWRd [void]* 0 "" '(let ((gl_print_error_adhoc_2 (lambda () (gl_print_error:[void,i8*]* "OpenGL Error")))) gl_print_error_adhoc_2))
(bind-poly gl_print_error gl_print_error_adhoc_W3ZvaWRd "")
(register-lib-func xtmgl-objects2 gl_print_driver_info_adhoc_W3ZvaWRd [void]* 0 "" '(let ((gl_print_driver_info_adhoc_3 (lambda () (println "--------------------------------------------------") (println "Extempore OpenGL driver info") (println "--------------------------------------------------") (printf "  Vendor:  %s\n" (glGetString GL_VENDOR)) (printf "Renderer:  %s\n" (glGetString GL_RENDERER)) (printf " Version:  %s\n" (glGetString GL_VERSION)) (println "--------------------------------------------------") void))) gl_print_driver_info_adhoc_3))
(bind-poly gl_print_driver_info gl_print_driver_info_adhoc_W3ZvaWRd "")
(register-lib-type xtmgl-objects2 VBO <i32,i32,i64,i8*,i64,i64> "")
(register-lib-func xtmgl-objects2 VBO_adhoc_W1ZCTyosaTMyLGkzMixpNjQsaTgqLGk2NCxpNjRd [VBO*,i32,i32,i64,i8*,i64,i64]* 0 "" '(let ((VBO_adhoc_4 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4 arg_5) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) (tset! obj 5 arg_5) obj)))) VBO_adhoc_4))
(bind-poly VBO VBO_adhoc_W1ZCTyosaTMyLGkzMixpNjQsaTgqLGk2NCxpNjRd "")
(register-lib-func xtmgl-objects2 VBO_z_adhoc_W1ZCTyosaTMyLGkzMixpNjQsaTgqLGk2NCxpNjRd [VBO*,i32,i32,i64,i8*,i64,i64]* 0 "" '(let ((VBO_z_adhoc_5 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4 arg_5) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) (tset! obj 5 arg_5) obj)))) VBO_z_adhoc_5))
(bind-poly VBO_z VBO_z_adhoc_W1ZCTyosaTMyLGkzMixpNjQsaTgqLGk2NCxpNjRd "")
(register-lib-func xtmgl-objects2 VBO_h_adhoc_W1ZCTyosaTMyLGkzMixpNjQsaTgqLGk2NCxpNjRd [VBO*,i32,i32,i64,i8*,i64,i64]* 0 "" '(let ((VBO_h_adhoc_6 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4 arg_5) (let ((obj (halloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) (tset! obj 5 arg_5) obj)))) VBO_h_adhoc_6))
(bind-poly VBO_h VBO_h_adhoc_W1ZCTyosaTMyLGkzMixpNjQsaTgqLGk2NCxpNjRd "")
(register-lib-func xtmgl-objects2 VBO_val_adhoc_W1ZCTyxpMzIsaTMyLGk2NCxpOCosaTY0LGk2NF0 [VBO,i32,i32,i64,i8*,i64,i64]* 0 "" '(let ((VBO_val_adhoc_7 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4 arg_5) (let ((obj:VBO* (salloc))) (tfill! obj arg_0 arg_1 arg_2 arg_3 arg_4 arg_5) (pref obj 0))))) VBO_val_adhoc_7))
(bind-poly VBO_val VBO_val_adhoc_W1ZCTyxpMzIsaTMyLGk2NCxpOCosaTY0LGk2NF0 "")
(register-lib-func xtmgl-objects2 hcopy_adhoc_W1ZCTyosVkJPKl0 [VBO*,VBO*]* 0 "" '(let ((hcopy_adhoc_8 (lambda (x:VBO*) (let ((obj (halloc))) (tset! obj 0 (tref x 0)) (tset! obj 1 (tref x 1)) (tset! obj 2 (tref x 2)) (tset! obj 3 (tref x 3)) (tset! obj 4 (tref x 4)) (tset! obj 5 (tref x 5)) obj)))) hcopy_adhoc_8))
(bind-poly hcopy hcopy_adhoc_W1ZCTyosVkJPKl0 "")
(register-lib-func xtmgl-objects2 hfree_adhoc_W3ZvaWQsVkJPKl0 [void,VBO*]* 0 "" '(let ((hfree_adhoc_9 (lambda (x:VBO*) () () () () () () (free x) void))) hfree_adhoc_9))
(bind-poly hfree hfree_adhoc_W3ZvaWQsVkJPKl0 "")
(register-lib-func xtmgl-objects2 zcopy_adhoc_W1ZCTyosVkJPKixtem9uZSosbXpvbmUqXQ [VBO*,VBO*,mzone*,mzone*]* 0 "" '(let ((zcopy_adhoc_10 (lambda (x:VBO* fromz toz) (if (llvm_ptr_in_zone fromz (cast x i8*)) (begin (push_zone toz) (let ((obj (zalloc))) (begin (tset! obj 0 (tref x 0))) (begin (tset! obj 1 (tref x 1))) (begin (tset! obj 2 (tref x 2))) (if (llvm_ptr_in_zone fromz (cast (tref x 3) i8*)) (let ((newptr:i8* (zalloc))) (memcpy (cast newptr i8*) (cast (tref x 3) i8*) 1) (tset! obj 3 newptr)) (tset! obj 3 (tref x 3))) (begin (tset! obj 4 (tref x 4))) (begin (tset! obj 5 (tref x 5))) (pop_zone) obj)) x)))) zcopy_adhoc_10))
(bind-poly zcopy zcopy_adhoc_W1ZCTyosVkJPKixtem9uZSosbXpvbmUqXQ "")
(register-lib-func xtmgl-objects2 id_adhoc_W2kzMixWQk8qXQ [i32,VBO*]* 0 "" '(let ((id_adhoc_11 (lambda (vbo:VBO*) (if (null? vbo) -1 (tref vbo 0))))) id_adhoc_11))
(bind-poly id id_adhoc_W2kzMixWQk8qXQ "")
(register-lib-func xtmgl-objects2 type_adhoc_W2kzMixWQk8qXQ [i32,VBO*]* 0 "" '(let ((type_adhoc_12 (lambda (vbo:VBO*) (if (null? vbo) -1 (tref vbo 1))))) type_adhoc_12))
(bind-poly type type_adhoc_W2kzMixWQk8qXQ "")
(register-lib-func xtmgl-objects2 size_adhoc_W2k2NCxWQk8qXQ [i64,VBO*]* 0 "" '(let ((size_adhoc_13 (lambda (vbo:VBO*) (if (null? vbo) 0 (tref vbo 2))))) size_adhoc_13))
(bind-poly size size_adhoc_W2k2NCxWQk8qXQ "")
(register-lib-func xtmgl-objects2 data_adhoc_W2k4KixWQk8qXQ [i8*,VBO*]* 0 "" '(let ((data_adhoc_14 (lambda (vbo:VBO*) (if (null? vbo) null (tref vbo 3))))) data_adhoc_14))
(bind-poly data data_adhoc_W2k4KixWQk8qXQ "")
(register-lib-func xtmgl-objects2 elements_adhoc_W2k2NCxWQk8qXQ [i64,VBO*]* 0 "" '(let ((elements_adhoc_15 (lambda (vbo:VBO*) (if (null? vbo) 0 (tref vbo 4))))) elements_adhoc_15))
(bind-poly elements elements_adhoc_W2k2NCxWQk8qXQ "")
(register-lib-func xtmgl-objects2 stride_adhoc_W2k2NCxWQk8qXQ [i64,VBO*]* 0 "" '(let ((stride_adhoc_16 (lambda (vbo:VBO*) (if (null? vbo) 0 (tref vbo 5))))) stride_adhoc_16))
(bind-poly stride stride_adhoc_W2k2NCxWQk8qXQ "")
(register-lib-func xtmgl-objects2 print_adhoc_W3ZvaWQsVkJPKl0 [void,VBO*]* 0 "" '(let ((print_adhoc_17 (lambda (vbo:VBO*) (if (null? vbo) (printf "<VBO: 0x0>") (printf "<VBO: id=%d type=%s nbytes=%d data=%p elements=%ld stride=%ld>" (tref vbo 0) (let ((t (type vbo))) (cond ((= t GL_BYTE) "byte") ((= t GL_SHORT) "short") ((= t GL_INT) "int") ((= t GL_FLOAT) "float") (else "unknown"))) (tref vbo 2) (tref vbo 3) (tref vbo 4) (tref vbo 5))) void))) print_adhoc_17))
(bind-poly print print_adhoc_W3ZvaWQsVkJPKl0 "")
(register-lib-func xtmgl-objects2 toString_adhoc_W1N0cmluZyosVkJPKl0 [String*,VBO*]* 0 "" '(let ((toString_adhoc_18 (lambda (vbo:VBO*) (let ((s:i8* (salloc 256))) (if (null? vbo) (sprintf s "<VBO: 0x0>") (sprintf s "<VBO: id=%d type=%s nbytes=%d data=%p elements=%ld stride=%ld>" (tref vbo 0) (let ((t (type vbo))) (cond ((= t GL_BYTE) "byte") ((= t GL_SHORT) "short") ((= t GL_INT) "int") ((= t GL_FLOAT) "float") (else "unknown"))) (tref vbo 2) (tref vbo 3) (tref vbo 4) (tref vbo 5))) (String s))))) toString_adhoc_18))
(bind-poly toString toString_adhoc_W1N0cmluZyosVkJPKl0 "")
(register-lib-func xtmgl-objects2 VBO_adhoc_W1ZCTyosZmxvYXQqLGk2NCxpMzIsaTY0LGk2NF0 [VBO*,float*,i64,i32,i64,i64]* 0 "" '(let ((VBO_adhoc_19 (lambda (buf:float* buflen:i64 usage:i32 elements:i64 stride:i64) (let ((vbo:VBO* (VBO:[VBO*,i32,i32,i64,i8*,i64,i64]* 0 GL_FLOAT (* 4 buflen) (cast buf GLvoid*) elements stride))) (glGenBuffers 1 (tref-ptr vbo 0)) (gl_print_error "Error creating VBO") (glBindBuffer GL_ARRAY_BUFFER (id vbo)) (glBufferData GL_ARRAY_BUFFER (size vbo) (data vbo) usage) (gl_print_error "Error setting VBO data") (glBindBuffer GL_ARRAY_BUFFER 0) (zone_cleanup (glDeleteBuffers 1 (tref-ptr vbo 0)) (gl_print_error "Error deleting VBO")) vbo)))) VBO_adhoc_19))
(bind-poly VBO VBO_adhoc_W1ZCTyosZmxvYXQqLGk2NCxpMzIsaTY0LGk2NF0 "")
(register-lib-func xtmgl-objects2 VBO_adhoc_W1ZCTyosaTMyKixpNjQsaTMyLGk2NCxpNjRd [VBO*,i32*,i64,i32,i64,i64]* 0 "" '(let ((VBO_adhoc_20 (lambda (buf:i32* buflen:i64 usage elements:i64 stride:i64) (let ((vbo:VBO* (VBO:[VBO*,i32,i32,i64,i8*,i64,i64]* 0 GL_INT (* 4 buflen) (cast buf GLvoid*) elements stride))) (glGenBuffers 1 (tref-ptr vbo 0)) (gl_print_error "Error creating VBO") (glBindBuffer GL_ARRAY_BUFFER (id vbo)) (glBufferData GL_ARRAY_BUFFER (size vbo) (data vbo) usage) (gl_print_error "Error setting VBO data") (glBindBuffer GL_ARRAY_BUFFER 0) (zone_cleanup (glDeleteBuffers 1 (tref-ptr vbo 0)) (gl_print_error "Error deleting VBO")) vbo)))) VBO_adhoc_20))
(bind-poly VBO VBO_adhoc_W1ZCTyosaTMyKixpNjQsaTMyLGk2NCxpNjRd "")
(register-lib-func xtmgl-objects2 VBO_adhoc_W1ZCTyosZmxvYXQqLGk2NCxpNjQsaTY0XQ [VBO*,float*,i64,i64,i64]* 0 "" '(let ((VBO_adhoc_21 (lambda (buf:float* buflen elements stride) (VBO:[VBO*,float*,i64,i32,i64,i64]* buf buflen GL_STREAM_DRAW elements stride)))) VBO_adhoc_21))
(bind-poly VBO VBO_adhoc_W1ZCTyosZmxvYXQqLGk2NCxpNjQsaTY0XQ "")
(register-lib-func xtmgl-objects2 VBO_adhoc_W1ZCTyosaTMyKixpNjQsaTY0LGk2NF0 [VBO*,i32*,i64,i64,i64]* 0 "" '(let ((VBO_adhoc_22 (lambda (buf:i32* buflen elements stride) (VBO:[VBO*,i32*,i64,i32,i64,i64]* buf buflen GL_STREAM_DRAW elements stride)))) VBO_adhoc_22))
(bind-poly VBO VBO_adhoc_W1ZCTyosaTMyKixpNjQsaTY0LGk2NF0 "")
(register-lib-func xtmgl-objects2 VBO_adhoc_W1ZCTyosZmxvYXQqLGk2NCxpNjRd [VBO*,float*,i64,i64]* 0 "" '(let ((VBO_adhoc_23 (lambda (buf:float* buflen elements) (VBO:[VBO*,float*,i64,i32,i64,i64]* buf buflen GL_STREAM_DRAW elements 0)))) VBO_adhoc_23))
(bind-poly VBO VBO_adhoc_W1ZCTyosZmxvYXQqLGk2NCxpNjRd "")
(register-lib-func xtmgl-objects2 VBO_adhoc_W1ZCTyosaTMyKixpNjQsaTY0XQ [VBO*,i32*,i64,i64]* 0 "" '(let ((VBO_adhoc_24 (lambda (buf:i32* buflen elements) (VBO:[VBO*,i32*,i64,i32,i64,i64]* buf buflen GL_STREAM_DRAW elements 0)))) VBO_adhoc_24))
(bind-poly VBO VBO_adhoc_W1ZCTyosaTMyKixpNjQsaTY0XQ "")
(register-lib-func xtmgl-objects2 VBO_adhoc_W1ZCTyosZmxvYXQqLGk2NF0 [VBO*,float*,i64]* 0 "" '(let ((VBO_adhoc_25 (lambda (buf:float* buflen) (VBO:[VBO*,float*,i64,i32,i64,i64]* buf buflen GL_STREAM_DRAW buflen 0)))) VBO_adhoc_25))
(bind-poly VBO VBO_adhoc_W1ZCTyosZmxvYXQqLGk2NF0 "")
(register-lib-func xtmgl-objects2 VBO_adhoc_W1ZCTyosaTMyKixpNjRd [VBO*,i32*,i64]* 0 "" '(let ((VBO_adhoc_26 (lambda (buf:i32* buflen) (VBO:[VBO*,i32*,i64,i32,i64,i64]* buf buflen GL_STREAM_DRAW buflen 0)))) VBO_adhoc_26))
(bind-poly VBO VBO_adhoc_W1ZCTyosaTMyKixpNjRd "")
(register-lib-func xtmgl-objects2 update_adhoc_W3ZvaWQsVkJPKl0 [void,VBO*]* 0 "update the full buffer" '(let ((update_adhoc_27 (lambda (vbo:VBO*) (glBindBuffer GL_ARRAY_BUFFER (id vbo)) (gl_print_error "Error binding VBO") (glBufferSubData GL_ARRAY_BUFFER 0 (size vbo) (data vbo)) (gl_print_error "Error updating VBO subdata") (glBindBuffer GL_ARRAY_BUFFER 0)))) update_adhoc_27))
(bind-poly update update_adhoc_W3ZvaWQsVkJPKl0 "")
(register-lib-type xtmgl-objects2 VAO <i32,|16,i1|,|16,VBO*|> "")
(register-lib-func xtmgl-objects2 VAO_adhoc_W1ZBTyosaTMyLHwxNixpMXwsfDE2LFZCTyp8XQ [VAO*,i32,|16,i1|,|16,VBO*|]* 0 "" '(let ((VAO_adhoc_28 (lambda (arg_0 arg_1 arg_2) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) obj)))) VAO_adhoc_28))
(bind-poly VAO VAO_adhoc_W1ZBTyosaTMyLHwxNixpMXwsfDE2LFZCTyp8XQ "")
(register-lib-func xtmgl-objects2 VAO_z_adhoc_W1ZBTyosaTMyLHwxNixpMXwsfDE2LFZCTyp8XQ [VAO*,i32,|16,i1|,|16,VBO*|]* 0 "" '(let ((VAO_z_adhoc_29 (lambda (arg_0 arg_1 arg_2) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) obj)))) VAO_z_adhoc_29))
(bind-poly VAO_z VAO_z_adhoc_W1ZBTyosaTMyLHwxNixpMXwsfDE2LFZCTyp8XQ "")
(register-lib-func xtmgl-objects2 VAO_h_adhoc_W1ZBTyosaTMyLHwxNixpMXwsfDE2LFZCTyp8XQ [VAO*,i32,|16,i1|,|16,VBO*|]* 0 "" '(let ((VAO_h_adhoc_30 (lambda (arg_0 arg_1 arg_2) (let ((obj (halloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) obj)))) VAO_h_adhoc_30))
(bind-poly VAO_h VAO_h_adhoc_W1ZBTyosaTMyLHwxNixpMXwsfDE2LFZCTyp8XQ "")
(register-lib-func xtmgl-objects2 VAO_val_adhoc_W1ZBTyxpMzIsfDE2LGkxfCx8MTYsVkJPKnxd [VAO,i32,|16,i1|,|16,VBO*|]* 0 "" '(let ((VAO_val_adhoc_31 (lambda (arg_0 arg_1 arg_2) (let ((obj:VAO* (salloc))) (tfill! obj arg_0 arg_1 arg_2) (pref obj 0))))) VAO_val_adhoc_31))
(bind-poly VAO_val VAO_val_adhoc_W1ZBTyxpMzIsfDE2LGkxfCx8MTYsVkJPKnxd "")
(register-lib-func xtmgl-objects2 hcopy_adhoc_W1ZBTyosVkFPKl0 [VAO*,VAO*]* 0 "" '(let ((hcopy_adhoc_32 (lambda (x:VAO*) (let ((obj (halloc))) (tset! obj 0 (tref x 0)) (tset! obj 1 (tref x 1)) (tset! obj 2 (tref x 2)) obj)))) hcopy_adhoc_32))
(bind-poly hcopy hcopy_adhoc_W1ZBTyosVkFPKl0 "")
(register-lib-func xtmgl-objects2 hfree_adhoc_W3ZvaWQsVkFPKl0 [void,VAO*]* 0 "" '(let ((hfree_adhoc_33 (lambda (x:VAO*) () () () (free x) void))) hfree_adhoc_33))
(bind-poly hfree hfree_adhoc_W3ZvaWQsVkFPKl0 "")
(register-lib-func xtmgl-objects2 zcopy_adhoc_W1ZBTyosVkFPKixtem9uZSosbXpvbmUqXQ [VAO*,VAO*,mzone*,mzone*]* 0 "" '(let ((zcopy_adhoc_34 (lambda (x:VAO* fromz toz) (if (llvm_ptr_in_zone fromz (cast x i8*)) (begin (push_zone toz) (let ((obj (zalloc))) (begin (tset! obj 0 (tref x 0))) (begin (tset! obj 1 (tref x 1))) (begin (tset! obj 2 (tref x 2))) (pop_zone) obj)) x)))) zcopy_adhoc_34))
(bind-poly zcopy zcopy_adhoc_W1ZBTyosVkFPKixtem9uZSosbXpvbmUqXQ "")
(register-lib-val xtmgl-objects2 VAO_NULL_ATTRIBS |16,i1|* "")
(call-as-xtlang (set! VAO_NULL_ATTRIBS (array_ref #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f)) void)
(register-lib-val xtmgl-objects2 VAO_NULL_VBOS |16,VBO*|* "")
(call-as-xtlang (set! VAO_NULL_VBOS (array_ref (cast null VBO*) (cast null VBO*) (cast null VBO*) (cast null VBO*) (cast null VBO*) (cast null VBO*) (cast null VBO*) (cast null VBO*) (cast null VBO*) (cast null VBO*) (cast null VBO*) (cast null VBO*) (cast null VBO*) (cast null VBO*) (cast null VBO*) (cast null VBO*))) void)
(register-lib-func xtmgl-objects2 id_adhoc_W2kzMixWQU8qXQ [i32,VAO*]* 0 "" '(let ((id_adhoc_35 (lambda (vao:VAO*) (if (null? vao) -1 (tref vao 0))))) id_adhoc_35))
(bind-poly id id_adhoc_W2kzMixWQU8qXQ "")
(register-lib-func xtmgl-objects2 attribs_adhoc_W3wxNixpMXwqLFZBTypd [|16,i1|*,VAO*]* 0 "" '(let ((attribs_adhoc_36 (lambda (vao:VAO*) (if (null? vao) VAO_NULL_ATTRIBS (tref-ptr vao 1))))) attribs_adhoc_36))
(bind-poly attribs attribs_adhoc_W3wxNixpMXwqLFZBTypd "")
(register-lib-func xtmgl-objects2 buffers_adhoc_W3wxNixWQk8qfCosVkFPKl0 [|16,VBO*|*,VAO*]* 0 "" '(let ((buffers_adhoc_37 (lambda (vao:VAO*) (if (null? vao) VAO_NULL_VBOS (tref-ptr vao 2))))) buffers_adhoc_37))
(bind-poly buffers buffers_adhoc_W3wxNixWQk8qfCosVkFPKl0 "")
(register-lib-func xtmgl-objects2 get_vbo_adhoc_W1ZCTyosVkFPKixpNjRd [VBO*,VAO*,i64]* 0 "" '(let ((get_vbo_adhoc_38 (lambda (vao:VAO* idx) (if (< idx 16) (aref (tref-ptr vao 2) idx) (cast null VBO*))))) get_vbo_adhoc_38))
(bind-poly get_vbo get_vbo_adhoc_W1ZCTyosVkFPKixpNjRd "")
(register-lib-func xtmgl-objects2 attrib_set_p_adhoc_W2kxLFZBTyosaTY0XQ [i1,VAO*,i64]* 0 "" '(let ((attrib_set_p_adhoc_39 (lambda (vao:VAO* index) (if (< index 16) (aref (tref-ptr vao 1) index) #f)))) attrib_set_p_adhoc_39))
(bind-poly attrib_set_p attrib_set_p_adhoc_W2kxLFZBTyosaTY0XQ "")
(register-lib-func xtmgl-objects2 VAO_adhoc_W1ZBTypd [VAO*]* 0 "" '(let ((VAO_adhoc_40 (lambda () (let ((vao:VAO* (alloc)) (as (attribs vao)) (bs (buffers vao)) (id:GLuint* (salloc)) (i 0)) (glGenVertexArrays 1 id) (tset! vao 0 (pref id 0)) (gl_print_error "Error creating VAO") (dotimes (i 16) (aset! as i #f) (aset! bs i null)) (zone_cleanup (glDeleteVertexArrays 1 (tref-ptr vao 0)) (gl_print_error "Error deleting VAO")) vao)))) VAO_adhoc_40))
(bind-poly VAO VAO_adhoc_W1ZBTypd "")
(register-lib-func xtmgl-objects2 print_adhoc_W3ZvaWQsVkFPKl0 [void,VAO*]* 0 "" '(let ((print_adhoc_41 (lambda (vao:VAO*) (if (null? vao) (printf "<VAO: 0x0>") (printf "<VAO: id %d>" (tref vao 0))) void))) print_adhoc_41))
(bind-poly print print_adhoc_W3ZvaWQsVkFPKl0 "")
(register-lib-func xtmgl-objects2 toString_adhoc_W1N0cmluZyosVkFPKl0 [String*,VAO*]* 0 "" '(let ((toString_adhoc_42 (lambda (vao:VAO*) (let ((s:i8* (salloc 256))) (if (null? vao) (sprintf s "<VAO: 0x0>") (sprintf s "<VAO: id %d>" (tref vao 0))) (String s))))) toString_adhoc_42))
(bind-poly toString toString_adhoc_W1N0cmluZyosVkFPKl0 "")
(register-lib-func xtmgl-objects2 unset_attribute_adhoc_W3ZvaWQsVkFPKixpMzJd [void,VAO*,i32]* 0 "" '(let ((unset_attribute_adhoc_43 (lambda (vao index) (glBindVertexArray (id vao)) (aset! (attribs vao) index #f) (aset! (buffers vao) index null) (glDisableVertexAttribArray index) (glVertexAttribDivisor index 0) (glBindVertexArray 0) void))) unset_attribute_adhoc_43))
(bind-poly unset_attribute unset_attribute_adhoc_W3ZvaWQsVkFPKixpMzJd "")
(register-lib-func xtmgl-objects2 set_attribute_adhoc_W3ZvaWQsVkFPKixWQk8qLGkzMixpMzIsaTMyLGkzMixpMzIsaTFd [void,VAO*,VBO*,i32,i32,i32,i32,i32,i1]* 0 "" '(let ((set_attribute_adhoc_44 (lambda (vao:VAO* vbo:VBO* type index size stride:GLsizei offset instance_attr:i1) (begin (glBindVertexArray (id vao)) (gl_print_error "Error binding VAO") (glBindBuffer GL_ARRAY_BUFFER (id vbo)) (gl_print_error "Error binding VBO") (let ((component_size 4)) (if (= size 16) (begin (glEnableVertexAttribArray (+ index 0)) (glVertexAttribPointer (+ index 0) 4 type GL_FALSE (* stride component_size) (pref-ptr (cast null GLvoid*) (* component_size (+ offset 0)))) (glEnableVertexAttribArray (+ index 1)) (glVertexAttribPointer (+ index 1) 4 type GL_FALSE (* stride component_size) (pref-ptr (cast null GLvoid*) (* component_size (+ offset 4)))) (glEnableVertexAttribArray (+ index 2)) (glVertexAttribPointer (+ index 2) 4 type GL_FALSE (* stride component_size) (pref-ptr (cast null GLvoid*) (* component_size (+ offset 8)))) (glEnableVertexAttribArray (+ index 3)) (glVertexAttribPointer (+ index 3) 4 type GL_FALSE (* stride component_size) (pref-ptr (cast null GLvoid*) (* component_size (+ offset 12))))) (begin (glEnableVertexAttribArray index) (glVertexAttribPointer index size type GL_FALSE (* component_size stride) (pref-ptr (cast null GLvoid*) (* component_size offset)))))) (gl_print_error "Error binding VAO attribute") (if (= size 16) (begin (aset! (attribs vao) (+ index 0) #t) (aset! (attribs vao) (+ index 1) #t) (aset! (attribs vao) (+ index 2) #t) (aset! (attribs vao) (+ index 3) #t))) (if (<> size 16) (aset! (attribs vao) index #t)) (aset! (buffers vao) index vbo) (glBindBuffer GL_ARRAY_BUFFER 0) (if (and instance_attr (<> size 16)) (begin (glVertexAttribDivisor index 1) (gl_print_error "Error setting VAO attribute divisor"))) (if (and instance_attr (= size 16)) (begin (glVertexAttribDivisor (+ index 0) 1) (glVertexAttribDivisor (+ index 1) 1) (glVertexAttribDivisor (+ index 2) 1) (glVertexAttribDivisor (+ index 3) 1) (gl_print_error "Error setting VAO attribute divisor"))) (glBindVertexArray 0)) void))) set_attribute_adhoc_44))
(bind-poly set_attribute set_attribute_adhoc_W3ZvaWQsVkFPKixWQk8qLGkzMixpMzIsaTMyLGkzMixpMzIsaTFd "")
(register-lib-func xtmgl-objects2 set_attribute_adhoc_W3ZvaWQsVkFPKixWQk8qLGkzMixpMzIsaTMyLGk2NCxpMzJd [void,VAO*,VBO*,i32,i32,i32,i64,i32]* 0 "" '(let ((set_attribute_adhoc_45 (lambda (vao vbo type index size stride:i64 offset:i32) (set_attribute:[void,VAO*,VBO*,i32,i32,i32,GLsizei,i32,i1]* vao vbo type index size (i64toi32 stride) offset #f)))) set_attribute_adhoc_45))
(bind-poly set_attribute set_attribute_adhoc_W3ZvaWQsVkFPKixWQk8qLGkzMixpMzIsaTMyLGk2NCxpMzJd "")
(register-lib-func xtmgl-objects2 set_attribute_adhoc_W3ZvaWQsVkFPKixWQk8qLGkzMixpMzIsaTMyLGkzMl0 [void,VAO*,VBO*,i32,i32,i32,i32]* 0 "" '(let ((set_attribute_adhoc_46 (lambda (vao vbo index size stride:i32 offset:i32) (set_attribute:[void,VAO*,VBO*,i32,i32,i32,GLsizei,i32,i1]* vao vbo (type vbo) index size stride offset #f)))) set_attribute_adhoc_46))
(bind-poly set_attribute set_attribute_adhoc_W3ZvaWQsVkFPKixWQk8qLGkzMixpMzIsaTMyLGkzMl0 "")
(register-lib-func xtmgl-objects2 set_attribute_adhoc_W3ZvaWQsVkFPKixWQk8qLGkzMixpMzIsaTMyLGkzMixpMV0 [void,VAO*,VBO*,i32,i32,i32,i32,i1]* 0 "" '(let ((set_attribute_adhoc_47 (lambda (vao vbo index size stride:i32 offset:i32 instance_attr:i1) (set_attribute:[void,VAO*,VBO*,i32,i32,i32,GLsizei,i32,i1]* vao vbo (type vbo) index size stride offset instance_attr)))) set_attribute_adhoc_47))
(bind-poly set_attribute set_attribute_adhoc_W3ZvaWQsVkFPKixWQk8qLGkzMixpMzIsaTMyLGkzMixpMV0 "")
(register-lib-func xtmgl-objects2 set_attribute_adhoc_W3ZvaWQsVkFPKixWQk8qLGkzMixpMzJd [void,VAO*,VBO*,i32,i32]* 0 "" '(let ((set_attribute_adhoc_48 (lambda (vao vbo index size) (set_attribute:[void,VAO*,VBO*,i32,i32,i32,GLsizei,i32,i1]* vao vbo (type vbo) index size 0 0 #f)))) set_attribute_adhoc_48))
(bind-poly set_attribute set_attribute_adhoc_W3ZvaWQsVkFPKixWQk8qLGkzMixpMzJd "")
(register-lib-func xtmgl-objects2 set_attribute_adhoc_W3ZvaWQsVkFPKixWQk8qLGkzMixpMzIsaTFd [void,VAO*,VBO*,i32,i32,i1]* 0 "" '(let ((set_attribute_adhoc_49 (lambda (vao vbo index size instance_attr) (set_attribute:[void,VAO*,VBO*,i32,i32,i32,GLsizei,i32,i1]* vao vbo (type vbo) index size 0 0 instance_attr)))) set_attribute_adhoc_49))
(bind-poly set_attribute set_attribute_adhoc_W3ZvaWQsVkFPKixWQk8qLGkzMixpMzIsaTFd "")
(register-lib-func xtmgl-objects2 draw_adhoc_W3ZvaWQsVkFPKixpMzIsaTMyLGkzMixpMzJd [void,VAO*,i32,i32,i32,i32]* 0 "" '(let ((draw_adhoc_50 (let ((i 0)) (lambda (vao:VAO* draw_mode:i32 first_element:i32 count:i32 instances:i32) (glBindVertexArray (id vao)) (gl_print_error "Error binding vertex array") (dotimes (i 16) (if (aref (attribs vao) i) (begin (glEnableVertexAttribArray i)))) (gl_print_error "Error enablling attrib arrays in VAO!") (if (> instances 0) (glDrawArraysInstanced draw_mode first_element count instances) (glDrawArrays draw_mode first_element count)) (gl_print_error "Error drawing VAO!") (dotimes (i 16) (if (aref (attribs vao) i) (begin (glDisableVertexAttribArray i)))) (gl_print_error "Error disabling attrib arrays in VAO!") (glBindVertexArray 0))))) draw_adhoc_50))
(bind-poly draw draw_adhoc_W3ZvaWQsVkFPKixpMzIsaTMyLGkzMixpMzJd "")
(register-lib-func xtmgl-objects2 draw_adhoc_W3ZvaWQsVkFPKixpMzIsaTMyLGkzMl0 [void,VAO*,i32,i32,i32]* 0 "" '(let ((draw_adhoc_51 (lambda (vao:VAO* draw_mode:i32 first_element:i32 count:i32) (draw:[void,VAO*,i32,i32,i32,i32]* vao draw_mode first_element count 0)))) draw_adhoc_51))
(bind-poly draw draw_adhoc_W3ZvaWQsVkFPKixpMzIsaTMyLGkzMl0 "")
(register-lib-type xtmgl-objects2 Texture <i32,i32,i32,i32,i8*> "")
(register-lib-func xtmgl-objects2 Texture_adhoc_W1RleHR1cmUqLGkzMixpMzIsaTMyLGkzMixpOCpd [Texture*,i32,i32,i32,i32,i8*]* 0 "" '(let ((Texture_adhoc_52 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) obj)))) Texture_adhoc_52))
(bind-poly Texture Texture_adhoc_W1RleHR1cmUqLGkzMixpMzIsaTMyLGkzMixpOCpd "")
(register-lib-func xtmgl-objects2 Texture_z_adhoc_W1RleHR1cmUqLGkzMixpMzIsaTMyLGkzMixpOCpd [Texture*,i32,i32,i32,i32,i8*]* 0 "" '(let ((Texture_z_adhoc_53 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) obj)))) Texture_z_adhoc_53))
(bind-poly Texture_z Texture_z_adhoc_W1RleHR1cmUqLGkzMixpMzIsaTMyLGkzMixpOCpd "")
(register-lib-func xtmgl-objects2 Texture_h_adhoc_W1RleHR1cmUqLGkzMixpMzIsaTMyLGkzMixpOCpd [Texture*,i32,i32,i32,i32,i8*]* 0 "" '(let ((Texture_h_adhoc_54 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4) (let ((obj (halloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) obj)))) Texture_h_adhoc_54))
(bind-poly Texture_h Texture_h_adhoc_W1RleHR1cmUqLGkzMixpMzIsaTMyLGkzMixpOCpd "")
(register-lib-func xtmgl-objects2 Texture_val_adhoc_W1RleHR1cmUsaTMyLGkzMixpMzIsaTMyLGk4Kl0 [Texture,i32,i32,i32,i32,i8*]* 0 "" '(let ((Texture_val_adhoc_55 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4) (let ((obj:Texture* (salloc))) (tfill! obj arg_0 arg_1 arg_2 arg_3 arg_4) (pref obj 0))))) Texture_val_adhoc_55))
(bind-poly Texture_val Texture_val_adhoc_W1RleHR1cmUsaTMyLGkzMixpMzIsaTMyLGk4Kl0 "")
(register-lib-func xtmgl-objects2 hcopy_adhoc_W1RleHR1cmUqLFRleHR1cmUqXQ [Texture*,Texture*]* 0 "" '(let ((hcopy_adhoc_56 (lambda (x:Texture*) (let ((obj (halloc))) (tset! obj 0 (tref x 0)) (tset! obj 1 (tref x 1)) (tset! obj 2 (tref x 2)) (tset! obj 3 (tref x 3)) (tset! obj 4 (tref x 4)) obj)))) hcopy_adhoc_56))
(bind-poly hcopy hcopy_adhoc_W1RleHR1cmUqLFRleHR1cmUqXQ "")
(register-lib-func xtmgl-objects2 hfree_adhoc_W3ZvaWQsVGV4dHVyZSpd [void,Texture*]* 0 "" '(let ((hfree_adhoc_57 (lambda (x:Texture*) () () () () () (free x) void))) hfree_adhoc_57))
(bind-poly hfree hfree_adhoc_W3ZvaWQsVGV4dHVyZSpd "")
(register-lib-func xtmgl-objects2 zcopy_adhoc_W1RleHR1cmUqLFRleHR1cmUqLG16b25lKixtem9uZSpd [Texture*,Texture*,mzone*,mzone*]* 0 "" '(let ((zcopy_adhoc_58 (lambda (x:Texture* fromz toz) (if (llvm_ptr_in_zone fromz (cast x i8*)) (begin (push_zone toz) (let ((obj (zalloc))) (begin (tset! obj 0 (tref x 0))) (begin (tset! obj 1 (tref x 1))) (begin (tset! obj 2 (tref x 2))) (begin (tset! obj 3 (tref x 3))) (if (llvm_ptr_in_zone fromz (cast (tref x 4) i8*)) (let ((newptr:i8* (zalloc))) (memcpy (cast newptr i8*) (cast (tref x 4) i8*) 1) (tset! obj 4 newptr)) (tset! obj 4 (tref x 4))) (pop_zone) obj)) x)))) zcopy_adhoc_58))
(bind-poly zcopy zcopy_adhoc_W1RleHR1cmUqLFRleHR1cmUqLG16b25lKixtem9uZSpd "")
(register-lib-func xtmgl-objects2 id_adhoc_W2kzMixUZXh0dXJlKl0 [i32,Texture*]* 0 "" '(let ((id_adhoc_59 (lambda (tex:Texture*) (if (null? tex) -1 (tref tex 0))))) id_adhoc_59))
(bind-poly id id_adhoc_W2kzMixUZXh0dXJlKl0 "")
(register-lib-func xtmgl-objects2 type_adhoc_W2kzMixUZXh0dXJlKl0 [i32,Texture*]* 0 "" '(let ((type_adhoc_60 (lambda (tex:Texture*) (if (null? tex) -1 (tref tex 1))))) type_adhoc_60))
(bind-poly type type_adhoc_W2kzMixUZXh0dXJlKl0 "")
(register-lib-func xtmgl-objects2 type_adhoc_W2kzMixUZXh0dXJlKixpMzJd [i32,Texture*,i32]* 0 "" '(let ((type_adhoc_61 (lambda (tex:Texture* value:i32) (if (null? tex) -1 (tset! tex 1 value))))) type_adhoc_61))
(bind-poly type type_adhoc_W2kzMixUZXh0dXJlKixpMzJd "")
(register-lib-func xtmgl-objects2 width_adhoc_W2kzMixUZXh0dXJlKl0 [i32,Texture*]* 0 "" '(let ((width_adhoc_62 (lambda (tex:Texture*) (if (null? tex) 0 (tref tex 2))))) width_adhoc_62))
(bind-poly width width_adhoc_W2kzMixUZXh0dXJlKl0 "")
(register-lib-func xtmgl-objects2 width_adhoc_W2kzMixUZXh0dXJlKixpMzJd [i32,Texture*,i32]* 0 "" '(let ((width_adhoc_63 (lambda (tex:Texture* value) (if (null? tex) 0 (tset! tex 2 value))))) width_adhoc_63))
(bind-poly width width_adhoc_W2kzMixUZXh0dXJlKixpMzJd "")
(register-lib-func xtmgl-objects2 height_adhoc_W2kzMixUZXh0dXJlKl0 [i32,Texture*]* 0 "" '(let ((height_adhoc_64 (lambda (tex:Texture*) (if (null? tex) 0 (tref tex 3))))) height_adhoc_64))
(bind-poly height height_adhoc_W2kzMixUZXh0dXJlKl0 "")
(register-lib-func xtmgl-objects2 height_adhoc_W2kzMixUZXh0dXJlKixpMzJd [i32,Texture*,i32]* 0 "" '(let ((height_adhoc_65 (lambda (tex:Texture* value) (if (null? tex) 0 (tset! tex 3 value))))) height_adhoc_65))
(bind-poly height height_adhoc_W2kzMixUZXh0dXJlKixpMzJd "")
(register-lib-func xtmgl-objects2 data_adhoc_W2k4KixUZXh0dXJlKl0 [i8*,Texture*]* 0 "" '(let ((data_adhoc_66 (lambda (tex:Texture*) (if (null? tex) null (tref tex 4))))) data_adhoc_66))
(bind-poly data data_adhoc_W2k4KixUZXh0dXJlKl0 "")
(register-lib-func xtmgl-objects2 print_adhoc_W3ZvaWQsVGV4dHVyZSpd [void,Texture*]* 0 "" '(let ((print_adhoc_67 (lambda (tex:Texture*) (if (null? tex) (printf "<TEX: 0x0>") (printf "<TEX: id:%d type:%d width:%d height:%d>" (id tex) (type tex) (width tex) (height tex))) void))) print_adhoc_67))
(bind-poly print print_adhoc_W3ZvaWQsVGV4dHVyZSpd "")
(register-lib-func xtmgl-objects2 toString_adhoc_W1N0cmluZyosVGV4dHVyZSpd [String*,Texture*]* 0 "" '(let ((toString_adhoc_68 (lambda (tex:Texture*) (let ((s:i8* (salloc 256))) (if (null? tex) (printf "<TEX: 0x0>") (printf "<TEX: id:%d type:%d width:%d height:%d>" (id tex) (type tex) (width tex) (height tex))) (String s))))) toString_adhoc_68))
(bind-poly toString toString_adhoc_W1N0cmluZyosVGV4dHVyZSpd "")
(register-lib-func xtmgl-objects2 free_image_adhoc_W3ZvaWQsVGV4dHVyZSpd [void,Texture*]* 0 "" '(let ((free_image_adhoc_69 (lambda (tex:Texture*) (if (not (null? (tref tex 4))) (free (tref tex 4))) (tset! tex 1 0) (tset! tex 2 0) (tset! tex 3 0) void))) free_image_adhoc_69))
(bind-poly free_image free_image_adhoc_W3ZvaWQsVGV4dHVyZSpd "")
(register-lib-func xtmgl-objects2 load_data_adhoc_W3ZvaWQsVGV4dHVyZSosaTMyLFN0cmluZypd [void,Texture*,i32,String*]* 0 "" '(let ((load_data_adhoc_70 (lambda (tex:Texture* flipped:i32 filename:String*) (stbi_set_flip_vertically_on_load flipped) (let ((width_ptr:i32* (tref-ptr tex 2)) (height_ptr:i32* (tref-ptr tex 3)) (comp_ptr:i32* (salloc)) (data (stbi_load (cstring filename) width_ptr height_ptr comp_ptr 4))) (cond ((= (pref comp_ptr 0) 4) (tset! tex 1 GL_RGBA)) ((= (pref comp_ptr 0) 3) (tset! tex 1 GL_RGBA)) ((= (pref comp_ptr 0) 1) (tset! tex 1 GL_DEPTH_COMPONENT)) (else (println "Unknown componenet depth: " (pref comp_ptr 0)) 1:i32)) (if (null? data) (begin (println (stbi_failure_reason)) 1) (begin (tset! tex 4 data) 1)) void)))) load_data_adhoc_70))
(bind-poly load_data load_data_adhoc_W3ZvaWQsVGV4dHVyZSosaTMyLFN0cmluZypd "")
(register-lib-func xtmgl-objects2 load_cube_data_adhoc_W3ZvaWQsVGV4dHVyZSosaTMyLFN0cmluZyosU3RyaW5nKixTdHJpbmcqLFN0cmluZyosU3RyaW5nKixTdHJpbmcqXQ [void,Texture*,i32,String*,String*,String*,String*,String*,String*]* 0 "" '(let ((load_cube_data_adhoc_71 (lambda (tex:Texture* flipped:i32 front:String* back:String* top:String* bottom:String* left:String* right:String*) (stbi_set_flip_vertically_on_load flipped) (let ((width_ptr:i32* (tref-ptr tex 2)) (height_ptr:i32* (tref-ptr tex 3)) (comp_ptr:i32* (salloc)) (i:i32 0) (wp:i32* (salloc 6)) (hp:i32* (salloc 6)) (cp:i32* (salloc 6)) (wpt:i32 0) (hpt:i32 0) (cpt:i32 0) (front_data (stbi_load (cstring front) (pref-ptr wp 0) (pref-ptr hp 0) (pref-ptr cp 0) 4)) (back_data (stbi_load (cstring back) (pref-ptr wp 1) (pref-ptr hp 1) (pref-ptr cp 1) 4)) (top_data (stbi_load (cstring top) (pref-ptr wp 2) (pref-ptr hp 2) (pref-ptr cp 2) 4)) (bottom_data (stbi_load (cstring bottom) (pref-ptr wp 3) (pref-ptr hp 3) (pref-ptr cp 3) 4)) (left_data (stbi_load (cstring left) (pref-ptr wp 4) (pref-ptr hp 4) (pref-ptr cp 4) 4)) (right_data (stbi_load (cstring right) (pref-ptr wp 5) (pref-ptr hp 5) (pref-ptr cp 5) 4)) (w:i32 (pref wp 0)) (h:i32 (pref hp 0)) (c:i32 (pref cp 0)) (whc:i64 (convert (* w h 4))) (data:i8* (alloc (* whc 6)))) (dotimes (i 6) (set! wpt (+ wpt (pref wp i))) (set! hpt (+ hpt (pref hp i))) (set! cpt (+ cpt (pref cp i)))) (if (<> (/ wpt 6) w) (begin (println "Bad cube map!  All 6 images must have the same width!" w) (set! front_data null))) (if (<> (/ hpt 6) h) (begin (println "Bad cube map!  All 6 images must have the same height!" h) (set! front_data null))) (if (<> (/ cpt 6) c) (begin (println "Bad cube map!  All 6 images must have the same number of components" c) (set! front_data null))) (pset! width_ptr 0 w) (pset! height_ptr 0 h) (pset! comp_ptr 0 4) (tset! tex 1 GL_RGBA) (if (or (null? front_data) (null? back_data) (null? top_data) (null? bottom_data) (null? left_data) (null? right_data)) (begin (println "failed to load some images" (stbi_failure_reason)) 1) (begin (memcpy (pref-ptr data (* whc 0)) front_data whc) (memcpy (pref-ptr data (* whc 1)) back_data whc) (memcpy (pref-ptr data (* whc 2)) top_data whc) (memcpy (pref-ptr data (* whc 3)) bottom_data whc) (memcpy (pref-ptr data (* whc 4)) left_data whc) (memcpy (pref-ptr data (* whc 5)) right_data whc) (tset! tex 4 data) 1)) void)))) load_cube_data_adhoc_71))
(bind-poly load_cube_data load_cube_data_adhoc_W3ZvaWQsVGV4dHVyZSosaTMyLFN0cmluZyosU3RyaW5nKixTdHJpbmcqLFN0cmluZyosU3RyaW5nKixTdHJpbmcqXQ "")
(register-lib-func xtmgl-objects2 create_data_adhoc_W3ZvaWQsVGV4dHVyZSosaTMyLGkzMixpMzJd [void,Texture*,i32,i32,i32]* 0 "" '(let ((create_data_adhoc_72 (lambda (tex:Texture* width:i32 height:i32 comp:i32) (let ((data:float* (alloc (* width height comp)))) (cond ((= comp 4) (tset! tex 1 GL_RGBA)) ((= comp 3) (tset! tex 1 GL_RGB)) ((= comp 1) (tset! tex 1 GL_DEPTH_COMPONENT)) (else (println "Unknown number of components: " comp) 1:i32)) (tset! tex 2 width) (tset! tex 3 height) (tset! tex 4 (cast data i8*)) void)))) create_data_adhoc_72))
(bind-poly create_data create_data_adhoc_W3ZvaWQsVGV4dHVyZSosaTMyLGkzMixpMzJd "")
(register-lib-func xtmgl-objects2 write_adhoc_W3ZvaWQsVGV4dHVyZSosU3RyaW5nKixpMV0 [void,Texture*,String*,i1]* 0 "" '(let ((write_adhoc_73 (lambda (tex:Texture* filename:String* flip:i1) (let ((comp (if (= (type tex) GL_RGB) 3 4))) (if flip (stbi_flip_vertically (width tex) (height tex) comp (data tex))) (stbi_write_png (cstring filename) (width tex) (height tex) comp (data tex) (* (width tex) comp 1)) void)))) write_adhoc_73))
(bind-poly write write_adhoc_W3ZvaWQsVGV4dHVyZSosU3RyaW5nKixpMV0 "")
(register-lib-func xtmgl-objects2 update_cube_adhoc_W3ZvaWQsVGV4dHVyZSpd [void,Texture*]* 0 "" '(let ((update_cube_adhoc_74 (lambda (tex:Texture*) (glActiveTexture GL_TEXTURE0) (glBindTexture GL_TEXTURE_CUBE_MAP (id tex)) (gl_print_error "error binding texture cube data") (glTexImage2D GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0 (if (= (type tex) GL_BGRA) GL_RGBA (type tex)) (width tex) (height tex) 0 (type tex) GL_UNSIGNED_BYTE (pref-ptr (data tex) (* (width tex) (height tex) 4 0))) (glTexImage2D GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0 (if (= (type tex) GL_BGRA) GL_RGBA (type tex)) (width tex) (height tex) 0 (type tex) GL_UNSIGNED_BYTE (pref-ptr (data tex) (* (width tex) (height tex) 4 1))) (glTexImage2D GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0 (if (= (type tex) GL_BGRA) GL_RGBA (type tex)) (width tex) (height tex) 0 (type tex) GL_UNSIGNED_BYTE (pref-ptr (data tex) (* (width tex) (height tex) 4 2))) (glTexImage2D GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0 (if (= (type tex) GL_BGRA) GL_RGBA (type tex)) (width tex) (height tex) 0 (type tex) GL_UNSIGNED_BYTE (pref-ptr (data tex) (* (width tex) (height tex) 4 3))) (glTexImage2D GL_TEXTURE_CUBE_MAP_POSITIVE_X 0 (if (= (type tex) GL_BGRA) GL_RGBA (type tex)) (width tex) (height tex) 0 (type tex) GL_UNSIGNED_BYTE (pref-ptr (data tex) (* (width tex) (height tex) 4 4))) (glTexImage2D GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0 (if (= (type tex) GL_BGRA) GL_RGBA (type tex)) (width tex) (height tex) 0 (type tex) GL_UNSIGNED_BYTE (pref-ptr (data tex) (* (width tex) (height tex) 4 5))) (glBindTexture GL_TEXTURE_CUBE_MAP 0) (gl_print_error "could not update cube!") void))) update_cube_adhoc_74))
(bind-poly update_cube update_cube_adhoc_W3ZvaWQsVGV4dHVyZSpd "")
(register-lib-func xtmgl-objects2 bind_cube_adhoc_W2kzMixUZXh0dXJlKixpMzJd [i32,Texture*,i32]* 0 "" '(let ((bind_cube_adhoc_75 (lambda (tex:Texture* active:i32) (glActiveTexture (+ GL_TEXTURE0 active)) (glBindTexture GL_TEXTURE_CUBE_MAP (id tex)) (gl_print_error "error binding texture cube data") (cond ((or (= (type tex) GL_RGBA) (= (type tex) GL_BGRA)) (begin (glTexParameteri GL_TEXTURE_CUBE_MAP GL_TEXTURE_WRAP_S GL_CLAMP_TO_EDGE) (glTexParameteri GL_TEXTURE_CUBE_MAP GL_TEXTURE_WRAP_T GL_CLAMP_TO_EDGE) (glTexParameteri GL_TEXTURE_CUBE_MAP GL_TEXTURE_WRAP_R GL_CLAMP_TO_EDGE) (glTexParameteri GL_TEXTURE_CUBE_MAP GL_TEXTURE_MIN_FILTER GL_LINEAR) (glTexParameteri GL_TEXTURE_CUBE_MAP GL_TEXTURE_MAG_FILTER GL_LINEAR) 1)) (else 1)) (gl_print_error "error setting tex cube parameters") (id tex)))) bind_cube_adhoc_75))
(bind-poly bind_cube bind_cube_adhoc_W2kzMixUZXh0dXJlKixpMzJd "")
(register-lib-func xtmgl-objects2 update_adhoc_W3ZvaWQsVGV4dHVyZSpd [void,Texture*]* 0 "" '(let ((update_adhoc_76 (lambda (tex:Texture*) (glActiveTexture GL_TEXTURE0) (glBindTexture GL_TEXTURE_2D (id tex)) (glTexImage2D GL_TEXTURE_2D 0 (if (= (type tex) GL_BGRA) GL_RGBA (type tex)) (width tex) (height tex) 0 (type tex) GL_UNSIGNED_BYTE (data tex)) (glBindTexture GL_TEXTURE_2D 0) (gl_print_error "couldn't update texture") void))) update_adhoc_76))
(bind-poly update update_adhoc_W3ZvaWQsVGV4dHVyZSpd "")
(register-lib-func xtmgl-objects2 bind_adhoc_W2kzMixUZXh0dXJlKixpMzJd [i32,Texture*,i32]* 0 "" '(let ((bind_adhoc_77 (lambda (tex:Texture* unit:i32) (glActiveTexture (+ GL_TEXTURE0 unit)) (glBindTexture GL_TEXTURE_2D (id tex)) (cond ((or (= (type tex) GL_RGBA) (= (type tex) GL_RGB) (= (type tex) GL_BGR) (= (type tex) GL_BGRA)) (begin (glTexParameteri GL_TEXTURE_2D GL_TEXTURE_WRAP_S GL_CLAMP_TO_EDGE) (glTexParameteri GL_TEXTURE_2D GL_TEXTURE_WRAP_T GL_CLAMP_TO_EDGE) (glTexParameteri GL_TEXTURE_2D GL_TEXTURE_MIN_FILTER GL_LINEAR) (glTexParameteri GL_TEXTURE_2D GL_TEXTURE_MAG_FILTER GL_LINEAR) 1)) ((= (type tex) GL_DEPTH_COMPONENT) (begin (glTexParameteri GL_TEXTURE_2D GL_TEXTURE_MAG_FILTER GL_NEAREST) (glTexParameteri GL_TEXTURE_2D GL_TEXTURE_MIN_FILTER GL_NEAREST) (glTexParameteri GL_TEXTURE_2D GL_TEXTURE_WRAP_S GL_CLAMP_TO_EDGE) (glTexParameteri GL_TEXTURE_2D GL_TEXTURE_WRAP_T GL_CLAMP_TO_EDGE) 1)) (else 1)) (gl_print_error "error setting tex parameters") (id tex)))) bind_adhoc_77))
(bind-poly bind bind_adhoc_W2kzMixUZXh0dXJlKixpMzJd "")
(register-lib-func xtmgl-objects2 bind_adhoc_W2kzMixUZXh0dXJlKl0 [i32,Texture*]* 0 "" '(let ((bind_adhoc_78 (lambda (tex:Texture*) (bind:[i32,Texture*,i32]* tex 0)))) bind_adhoc_78))
(bind-poly bind bind_adhoc_W2kzMixUZXh0dXJlKl0 "")
(register-lib-func xtmgl-objects2 unbind_adhoc_W3ZvaWQsVGV4dHVyZSosaTMyXQ [void,Texture*,i32]* 0 "" '(let ((unbind_adhoc_79 (lambda (tex:Texture* unit:i32) (glActiveTexture (+ GL_TEXTURE0 unit)) (glBindTexture GL_TEXTURE_2D 0) (gl_print_error "couldn't unbind texture") void))) unbind_adhoc_79))
(bind-poly unbind unbind_adhoc_W3ZvaWQsVGV4dHVyZSosaTMyXQ "")
(register-lib-func xtmgl-objects2 unbind_adhoc_W3ZvaWQsVGV4dHVyZSpd [void,Texture*]* 0 "" '(let ((unbind_adhoc_80 (lambda (tex:Texture*) (unbind:[void,Texture*,i32]* tex 0)))) unbind_adhoc_80))
(bind-poly unbind unbind_adhoc_W3ZvaWQsVGV4dHVyZSpd "")
(register-lib-func xtmgl-objects2 unbind_cube_adhoc_W3ZvaWQsVGV4dHVyZSosaTMyXQ [void,Texture*,i32]* 0 "" '(let ((unbind_cube_adhoc_81 (lambda (tex:Texture* active:i32) (glActiveTexture (+ GL_TEXTURE0 active)) (glBindTexture GL_TEXTURE_CUBE_MAP 0) (gl_print_error "couldn't unbind texture") void))) unbind_cube_adhoc_81))
(bind-poly unbind_cube unbind_cube_adhoc_W3ZvaWQsVGV4dHVyZSosaTMyXQ "")
(register-lib-func xtmgl-objects2 unbind_cube_adhoc_W3ZvaWQsVGV4dHVyZSpd [void,Texture*]* 0 "" '(let ((unbind_cube_adhoc_82 (lambda (tex:Texture*) (unbind_cube:[void,Texture*,i32]* tex 0)))) unbind_cube_adhoc_82))
(bind-poly unbind_cube unbind_cube_adhoc_W3ZvaWQsVGV4dHVyZSpd "")
(register-lib-func xtmgl-objects2 Texture_adhoc_W1RleHR1cmUqLGkzMl0 [Texture*,i32]* 0 "" '(let ((Texture_adhoc_83 (lambda (type) (let ((tex (Texture:[Texture*,i32,i32,i32,i32,i8*]* 0 type 0 0 null))) (glGenTextures 1 (tref-ptr tex 0)) (gl_print_error "Error creating Texture") (zone_cleanup (glDeleteTextures 1 (tref-ptr tex 0)) (gl_print_error "Error deleting Texture") (free_image tex)) tex)))) Texture_adhoc_83))
(bind-poly Texture Texture_adhoc_W1RleHR1cmUqLGkzMl0 "")
(register-lib-func xtmgl-objects2 Texture_adhoc_W1RleHR1cmUqXQ [Texture*]* 0 "" '(let ((Texture_adhoc_84 (lambda () (Texture:[Texture*,i32]* 0)))) Texture_adhoc_84))
(bind-poly Texture Texture_adhoc_W1RleHR1cmUqXQ "")
(register-lib-func xtmgl-objects2 Texture_adhoc_W1RleHR1cmUqLGkzMixpMzIsaTMyXQ [Texture*,i32,i32,i32]* 0 "" '(let ((Texture_adhoc_85 (lambda (width:i32 height:i32 comp:i32) (let ((tex (cond ((= comp 1) (Texture:[Texture*,i32]* GL_DEPTH_COMPONENT)) ((= comp 3) (Texture:[Texture*,i32]* GL_RGB)) (else (Texture:[Texture*,i32]* GL_RGBA))))) (create_data tex width height comp) (update tex) tex)))) Texture_adhoc_85))
(bind-poly Texture Texture_adhoc_W1RleHR1cmUqLGkzMixpMzIsaTMyXQ "")
(register-lib-func xtmgl-objects2 Texture_adhoc_W1RleHR1cmUqLFN0cmluZyosaTMyXQ [Texture*,String*,i32]* 0 "" '(let ((Texture_adhoc_86 (lambda (filename flipped) (let ((tex (Texture:[Texture*]*))) (load_data tex flipped filename) (update tex) tex)))) Texture_adhoc_86))
(bind-poly Texture Texture_adhoc_W1RleHR1cmUqLFN0cmluZyosaTMyXQ "")
(register-lib-func xtmgl-objects2 Texture_adhoc_W1RleHR1cmUqLFN0cmluZypd [Texture*,String*]* 0 "" '(let ((Texture_adhoc_87 (lambda (filename) (let ((tex (Texture:[Texture*,String*,i32]* filename 1))) tex)))) Texture_adhoc_87))
(bind-poly Texture Texture_adhoc_W1RleHR1cmUqLFN0cmluZypd "")
(register-lib-func xtmgl-objects2 Texture_adhoc_W1RleHR1cmUqLGkzMixpMzIsaTMyLGk4Kl0 [Texture*,i32,i32,i32,i8*]* 0 "" '(let ((Texture_adhoc_88 (lambda (width:i32 height:i32 comp:i32 data:i8*) (let ((tex (cond ((= comp 1) (Texture:[Texture*,i32]* GL_DEPTH_COMPONENT)) ((= comp 3) (Texture:[Texture*,i32]* GL_RGB)) (else (Texture:[Texture*,i32]* GL_RGBA))))) (tset! tex 2 width) (tset! tex 3 height) (tset! tex 4 (cast data i8*)) (update tex) tex)))) Texture_adhoc_88))
(bind-poly Texture Texture_adhoc_W1RleHR1cmUqLGkzMixpMzIsaTMyLGk4Kl0 "")
(register-lib-type xtmgl-objects2 Shader <i32,i32> "")
(register-lib-func xtmgl-objects2 Shader_adhoc_W1NoYWRlciosaTMyLGkzMl0 [Shader*,i32,i32]* 0 "" '(let ((Shader_adhoc_89 (lambda (arg_0 arg_1) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) obj)))) Shader_adhoc_89))
(bind-poly Shader Shader_adhoc_W1NoYWRlciosaTMyLGkzMl0 "")
(register-lib-func xtmgl-objects2 Shader_z_adhoc_W1NoYWRlciosaTMyLGkzMl0 [Shader*,i32,i32]* 0 "" '(let ((Shader_z_adhoc_90 (lambda (arg_0 arg_1) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) obj)))) Shader_z_adhoc_90))
(bind-poly Shader_z Shader_z_adhoc_W1NoYWRlciosaTMyLGkzMl0 "")
(register-lib-func xtmgl-objects2 Shader_h_adhoc_W1NoYWRlciosaTMyLGkzMl0 [Shader*,i32,i32]* 0 "" '(let ((Shader_h_adhoc_91 (lambda (arg_0 arg_1) (let ((obj (halloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) obj)))) Shader_h_adhoc_91))
(bind-poly Shader_h Shader_h_adhoc_W1NoYWRlciosaTMyLGkzMl0 "")
(register-lib-func xtmgl-objects2 Shader_val_adhoc_W1NoYWRlcixpMzIsaTMyXQ [Shader,i32,i32]* 0 "" '(let ((Shader_val_adhoc_92 (lambda (arg_0 arg_1) (let ((obj:Shader* (salloc))) (tfill! obj arg_0 arg_1) (pref obj 0))))) Shader_val_adhoc_92))
(bind-poly Shader_val Shader_val_adhoc_W1NoYWRlcixpMzIsaTMyXQ "")
(register-lib-func xtmgl-objects2 hcopy_adhoc_W1NoYWRlciosU2hhZGVyKl0 [Shader*,Shader*]* 0 "" '(let ((hcopy_adhoc_93 (lambda (x:Shader*) (let ((obj (halloc))) (tset! obj 0 (tref x 0)) (tset! obj 1 (tref x 1)) obj)))) hcopy_adhoc_93))
(bind-poly hcopy hcopy_adhoc_W1NoYWRlciosU2hhZGVyKl0 "")
(register-lib-func xtmgl-objects2 hfree_adhoc_W3ZvaWQsU2hhZGVyKl0 [void,Shader*]* 0 "" '(let ((hfree_adhoc_94 (lambda (x:Shader*) () () (free x) void))) hfree_adhoc_94))
(bind-poly hfree hfree_adhoc_W3ZvaWQsU2hhZGVyKl0 "")
(register-lib-func xtmgl-objects2 zcopy_adhoc_W1NoYWRlciosU2hhZGVyKixtem9uZSosbXpvbmUqXQ [Shader*,Shader*,mzone*,mzone*]* 0 "" '(let ((zcopy_adhoc_95 (lambda (x:Shader* fromz toz) (if (llvm_ptr_in_zone fromz (cast x i8*)) (begin (push_zone toz) (let ((obj (zalloc))) (begin (tset! obj 0 (tref x 0))) (begin (tset! obj 1 (tref x 1))) (pop_zone) obj)) x)))) zcopy_adhoc_95))
(bind-poly zcopy zcopy_adhoc_W1NoYWRlciosU2hhZGVyKixtem9uZSosbXpvbmUqXQ "")
(register-lib-func xtmgl-objects2 id_adhoc_W2kzMixTaGFkZXIqXQ [i32,Shader*]* 0 "" '(let ((id_adhoc_96 (lambda (shader:Shader*) (tref shader 0)))) id_adhoc_96))
(bind-poly id id_adhoc_W2kzMixTaGFkZXIqXQ "")
(register-lib-func xtmgl-objects2 type_adhoc_W2kzMixTaGFkZXIqXQ [i32,Shader*]* 0 "" '(let ((type_adhoc_97 (lambda (shader:Shader*) (tref shader 1)))) type_adhoc_97))
(bind-poly type type_adhoc_W2kzMixTaGFkZXIqXQ "")
(register-lib-func xtmgl-objects2 print_adhoc_W3ZvaWQsU2hhZGVyKl0 [void,Shader*]* 0 "" '(let ((print_adhoc_98 (let ((max_log_length 4096) (logbuf:i8* (zalloc max_log_length))) (lambda (shader:Shader*) (if (null? shader) (begin (println "NULL SHADER!") void) (let ((len_ptr (salloc 1 i32))) (glGetShaderInfoLog (id shader) max_log_length len_ptr logbuf) (printf "%sShader: %s\n" (cond ((= (type shader) GL_VERTEX_SHADER) "Vert") ((= (type shader) GL_FRAGMENT_SHADER) "Frag") ((= (type shader) GL_GEOMETRY_SHADER) "Geom") (else "")) (if (= (pref len_ptr 0) 0) "OK" logbuf)) (if (= (pref len_ptr 0) 0) 0 1) void)))))) print_adhoc_98))
(bind-poly print print_adhoc_W3ZvaWQsU2hhZGVyKl0 "")
(register-lib-func xtmgl-objects2 Shader_adhoc_W1NoYWRlciosU3RyaW5nKixpMzJd [Shader*,String*,i32]* 0 "create (and compile) an OpenGL shader" '(let ((Shader_adhoc_99 (lambda (source:String* type:GLenum) (if (not (or (= type GL_VERTEX_SHADER) (= type GL_FRAGMENT_SHADER) (= type GL_GEOMETRY_SHADER))) (begin (println "Error: shader type must be one of GL_VERTEX_SHADER, GL_FRAGMENT_SHADER or GL_GEOMETRY_SHADER") null) (let ((shader_id (glCreateShader type)) (source_ptr:i8** (salloc)) (shader (Shader:[Shader*,i32,i32]* shader_id type))) (pset! source_ptr 0 (cstring source)) (glShaderSource shader_id 1 source_ptr (cast null i32*)) (glCompileShader shader_id) (println 'Shader: shader) (gl_print_error "Error compiling shader") shader))))) Shader_adhoc_99))
(bind-poly Shader Shader_adhoc_W1NoYWRlciosU3RyaW5nKixpMzJd "")
(register-lib-type xtmgl-objects2 ShaderProgram <i32,Shader*,Shader*,Shader*,String*> "")
(register-lib-func xtmgl-objects2 ShaderProgram_adhoc_W1NoYWRlclByb2dyYW0qLGkzMixTaGFkZXIqLFNoYWRlciosU2hhZGVyKixTdHJpbmcqXQ [ShaderProgram*,i32,Shader*,Shader*,Shader*,String*]* 0 "" '(let ((ShaderProgram_adhoc_100 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) obj)))) ShaderProgram_adhoc_100))
(bind-poly ShaderProgram ShaderProgram_adhoc_W1NoYWRlclByb2dyYW0qLGkzMixTaGFkZXIqLFNoYWRlciosU2hhZGVyKixTdHJpbmcqXQ "")
(register-lib-func xtmgl-objects2 ShaderProgram_z_adhoc_W1NoYWRlclByb2dyYW0qLGkzMixTaGFkZXIqLFNoYWRlciosU2hhZGVyKixTdHJpbmcqXQ [ShaderProgram*,i32,Shader*,Shader*,Shader*,String*]* 0 "" '(let ((ShaderProgram_z_adhoc_101 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) obj)))) ShaderProgram_z_adhoc_101))
(bind-poly ShaderProgram_z ShaderProgram_z_adhoc_W1NoYWRlclByb2dyYW0qLGkzMixTaGFkZXIqLFNoYWRlciosU2hhZGVyKixTdHJpbmcqXQ "")
(register-lib-func xtmgl-objects2 ShaderProgram_h_adhoc_W1NoYWRlclByb2dyYW0qLGkzMixTaGFkZXIqLFNoYWRlciosU2hhZGVyKixTdHJpbmcqXQ [ShaderProgram*,i32,Shader*,Shader*,Shader*,String*]* 0 "" '(let ((ShaderProgram_h_adhoc_102 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4) (let ((obj (halloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) obj)))) ShaderProgram_h_adhoc_102))
(bind-poly ShaderProgram_h ShaderProgram_h_adhoc_W1NoYWRlclByb2dyYW0qLGkzMixTaGFkZXIqLFNoYWRlciosU2hhZGVyKixTdHJpbmcqXQ "")
(register-lib-func xtmgl-objects2 ShaderProgram_val_adhoc_W1NoYWRlclByb2dyYW0saTMyLFNoYWRlciosU2hhZGVyKixTaGFkZXIqLFN0cmluZypd [ShaderProgram,i32,Shader*,Shader*,Shader*,String*]* 0 "" '(let ((ShaderProgram_val_adhoc_103 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4) (let ((obj:ShaderProgram* (salloc))) (tfill! obj arg_0 arg_1 arg_2 arg_3 arg_4) (pref obj 0))))) ShaderProgram_val_adhoc_103))
(bind-poly ShaderProgram_val ShaderProgram_val_adhoc_W1NoYWRlclByb2dyYW0saTMyLFNoYWRlciosU2hhZGVyKixTaGFkZXIqLFN0cmluZypd "")
(register-lib-func xtmgl-objects2 hcopy_adhoc_W1NoYWRlclByb2dyYW0qLFNoYWRlclByb2dyYW0qXQ [ShaderProgram*,ShaderProgram*]* 0 "" '(let ((hcopy_adhoc_104 (lambda (x:ShaderProgram*) (let ((obj (halloc))) (tset! obj 0 (tref x 0)) (if (not (null? (tref x 1))) (tset! obj 1 (hcopy:[Shader*,Shader*]* (tref x 1)))) (if (not (null? (tref x 2))) (tset! obj 2 (hcopy:[Shader*,Shader*]* (tref x 2)))) (if (not (null? (tref x 3))) (tset! obj 3 (hcopy:[Shader*,Shader*]* (tref x 3)))) (if (not (null? (tref x 4))) (tset! obj 4 (hcopy:[String*,String*]* (tref x 4)))) obj)))) hcopy_adhoc_104))
(bind-poly hcopy hcopy_adhoc_W1NoYWRlclByb2dyYW0qLFNoYWRlclByb2dyYW0qXQ "")
(register-lib-func xtmgl-objects2 hfree_adhoc_W3ZvaWQsU2hhZGVyUHJvZ3JhbSpd [void,ShaderProgram*]* 0 "" '(let ((hfree_adhoc_105 (lambda (x:ShaderProgram*) () (if (not (null? (tref x 1))) (hfree:[void,Shader*]* (tref x 1))) (if (not (null? (tref x 2))) (hfree:[void,Shader*]* (tref x 2))) (if (not (null? (tref x 3))) (hfree:[void,Shader*]* (tref x 3))) (if (not (null? (tref x 4))) (hfree:[void,String*]* (tref x 4))) (free x) void))) hfree_adhoc_105))
(bind-poly hfree hfree_adhoc_W3ZvaWQsU2hhZGVyUHJvZ3JhbSpd "")
(register-lib-func xtmgl-objects2 zcopy_adhoc_W1NoYWRlclByb2dyYW0qLFNoYWRlclByb2dyYW0qLG16b25lKixtem9uZSpd [ShaderProgram*,ShaderProgram*,mzone*,mzone*]* 0 "" '(let ((zcopy_adhoc_106 (lambda (x:ShaderProgram* fromz toz) (if (llvm_ptr_in_zone fromz (cast x i8*)) (begin (push_zone toz) (let ((obj (zalloc))) (begin (tset! obj 0 (tref x 0))) (if (not (null? (tref x 1))) (tset! obj 1 (zcopy:[Shader*,Shader*,mzone*,mzone*]* (tref x 1) fromz toz))) (if (not (null? (tref x 2))) (tset! obj 2 (zcopy:[Shader*,Shader*,mzone*,mzone*]* (tref x 2) fromz toz))) (if (not (null? (tref x 3))) (tset! obj 3 (zcopy:[Shader*,Shader*,mzone*,mzone*]* (tref x 3) fromz toz))) (if (not (null? (tref x 4))) (tset! obj 4 (zcopy:[String*,String*,mzone*,mzone*]* (tref x 4) fromz toz))) (pop_zone) obj)) x)))) zcopy_adhoc_106))
(bind-poly zcopy zcopy_adhoc_W1NoYWRlclByb2dyYW0qLFNoYWRlclByb2dyYW0qLG16b25lKixtem9uZSpd "")
(register-lib-func xtmgl-objects2 id_adhoc_W2kzMixTaGFkZXJQcm9ncmFtKl0 [i32,ShaderProgram*]* 0 "" '(let ((id_adhoc_107 (lambda (program:ShaderProgram*) (if (null? program) -1 (tref program 0))))) id_adhoc_107))
(bind-poly id id_adhoc_W2kzMixTaGFkZXJQcm9ncmFtKl0 "")
(register-lib-func xtmgl-objects2 name_adhoc_W1N0cmluZyosU2hhZGVyUHJvZ3JhbSpd [String*,ShaderProgram*]* 0 "" '(let ((name_adhoc_108 (lambda (program:ShaderProgram*) (if (null? program) (Str "NULL PROGRAM!") (tref program 4))))) name_adhoc_108))
(bind-poly name name_adhoc_W1N0cmluZyosU2hhZGVyUHJvZ3JhbSpd "")
(register-lib-func xtmgl-objects2 print_adhoc_W3ZvaWQsU2hhZGVyUHJvZ3JhbSpd [void,ShaderProgram*]* 0 "" '(let ((print_adhoc_109 (let ((max_log_length 4096) (logbuf:i8* (zalloc max_log_length))) (lambda (program:ShaderProgram*) (if (null? program) (begin (println "NULL SHADER PROGRAM!") void) (let ((len_ptr (salloc 1 i32))) (glGetProgramInfoLog (id program) max_log_length len_ptr logbuf) (println "ShaderProgram: " (tref program 4)) (printf "%s\n" (if (= (pref len_ptr 0) 0) "OK" logbuf)) (if (= (pref len_ptr 0) 0) 0 1) void)))))) print_adhoc_109))
(bind-poly print print_adhoc_W3ZvaWQsU2hhZGVyUHJvZ3JhbSpd "")
(register-lib-func xtmgl-objects2 ShaderProgram_adhoc_W1NoYWRlclByb2dyYW0qLFN0cmluZyosU2hhZGVyKixTaGFkZXIqXQ [ShaderProgram*,String*,Shader*,Shader*]* 0 "compile and link shader program (vert and frag shader)" '(let ((ShaderProgram_adhoc_110 (lambda (name:String* vert:Shader* frag:Shader*) (if (not (and (= (type vert) GL_VERTEX_SHADER) (= (type frag) GL_FRAGMENT_SHADER))) (begin (println "Error: input shader types must be vert and frag respectively.") null) (let ((program (ShaderProgram:[ShaderProgram*,i32,Shader*,Shader*,Shader*,String*]* (glCreateProgram) vert frag null name))) (glAttachShader (id program) (id vert)) (glAttachShader (id program) (id frag)) (glLinkProgram (id program)) (gl_print_error "Error making shader program!") (println 'ShaderProgram: program) program))))) ShaderProgram_adhoc_110))
(bind-poly ShaderProgram ShaderProgram_adhoc_W1NoYWRlclByb2dyYW0qLFN0cmluZyosU2hhZGVyKixTaGFkZXIqXQ "")
(register-lib-func xtmgl-objects2 ShaderProgram_adhoc_W1NoYWRlclByb2dyYW0qLFN0cmluZyosU2hhZGVyKixTaGFkZXIqLFNoYWRlcipd [ShaderProgram*,String*,Shader*,Shader*,Shader*]* 0 "compile and link shader program (vert and frag shader)" '(let ((ShaderProgram_adhoc_111 (lambda (name:String* vert:Shader* geom:Shader* frag:Shader*) (if (not (and (= (type vert) GL_VERTEX_SHADER) (= (type geom) GL_GEOMETRY_SHADER) (= (type frag) GL_FRAGMENT_SHADER))) (begin (println "Error: input shader types must be vert, geom and frag respectively.") null) (let ((program (ShaderProgram:[ShaderProgram*,i32,Shader*,Shader*,Shader*,String*]* (glCreateProgram) vert frag geom name))) (glAttachShader (id program) (id vert)) (glAttachShader (id program) (id geom)) (glAttachShader (id program) (id frag)) (glLinkProgram (id program)) (gl_print_error "Error making shader program!") (println 'ShaderProgram: program) program))))) ShaderProgram_adhoc_111))
(bind-poly ShaderProgram ShaderProgram_adhoc_W1NoYWRlclByb2dyYW0qLFN0cmluZyosU2hhZGVyKixTaGFkZXIqLFNoYWRlcipd "")
(register-lib-func xtmgl-objects2 ShaderProgram_adhoc_W1NoYWRlclByb2dyYW0qLFN0cmluZyosU3RyaW5nKixTdHJpbmcqXQ [ShaderProgram*,String*,String*,String*]* 0 "compile and link shader program (vert and frag shader source)" '(let ((ShaderProgram_adhoc_112 (lambda (name:String* vsource:String* fsource:String*) (let ((vert (Shader vsource GL_VERTEX_SHADER)) (frag (Shader fsource GL_FRAGMENT_SHADER))) (gl_print_error "Error compiling Shaders") (if (or (null? vert) (null? frag)) null (ShaderProgram:[ShaderProgram*,String*,Shader*,Shader*]* name vert frag)))))) ShaderProgram_adhoc_112))
(bind-poly ShaderProgram ShaderProgram_adhoc_W1NoYWRlclByb2dyYW0qLFN0cmluZyosU3RyaW5nKixTdHJpbmcqXQ "")
(register-lib-func xtmgl-objects2 ShaderProgram_adhoc_W1NoYWRlclByb2dyYW0qLFN0cmluZyosU3RyaW5nKixTdHJpbmcqLFN0cmluZypd [ShaderProgram*,String*,String*,String*,String*]* 0 "compile and link shader program (vert and frag shader source)" '(let ((ShaderProgram_adhoc_113 (lambda (name:String* vsource:String* gsource:String* fsource:String*) (let ((vert (Shader vsource GL_VERTEX_SHADER)) (geom (Shader gsource GL_GEOMETRY_SHADER)) (frag (Shader fsource GL_FRAGMENT_SHADER))) (gl_print_error "Error compiling Shaders") (if (or (null? vert) (null? geom) (null? frag)) null (ShaderProgram:[ShaderProgram*,String*,Shader*,Shader*,Shader*]* name vert geom frag)))))) ShaderProgram_adhoc_113))
(bind-poly ShaderProgram ShaderProgram_adhoc_W1NoYWRlclByb2dyYW0qLFN0cmluZyosU3RyaW5nKixTdHJpbmcqLFN0cmluZypd "")
(register-lib-func xtmgl-objects2 start_adhoc_W3ZvaWQsU2hhZGVyUHJvZ3JhbSpd [void,ShaderProgram*]* 0 "" '(let ((start_adhoc_114 (lambda (prog:ShaderProgram*) (glUseProgram 0) (glUseProgram (id prog))))) start_adhoc_114))
(bind-poly start start_adhoc_W3ZvaWQsU2hhZGVyUHJvZ3JhbSpd "")
(register-lib-func xtmgl-objects2 stop_adhoc_W3ZvaWQsU2hhZGVyUHJvZ3JhbSpd [void,ShaderProgram*]* 0 "" '(let ((stop_adhoc_115 (lambda (prog:ShaderProgram*) (glUseProgram 0)))) stop_adhoc_115))
(bind-poly stop stop_adhoc_W3ZvaWQsU2hhZGVyUHJvZ3JhbSpd "")
(register-lib-type xtmgl-objects2 FBO <i32,Texture*,Texture*,i32,i32> "")
(register-lib-func xtmgl-objects2 FBO_adhoc_W0ZCTyosaTMyLFRleHR1cmUqLFRleHR1cmUqLGkzMixpMzJd [FBO*,i32,Texture*,Texture*,i32,i32]* 0 "" '(let ((FBO_adhoc_116 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) obj)))) FBO_adhoc_116))
(bind-poly FBO FBO_adhoc_W0ZCTyosaTMyLFRleHR1cmUqLFRleHR1cmUqLGkzMixpMzJd "")
(register-lib-func xtmgl-objects2 FBO_z_adhoc_W0ZCTyosaTMyLFRleHR1cmUqLFRleHR1cmUqLGkzMixpMzJd [FBO*,i32,Texture*,Texture*,i32,i32]* 0 "" '(let ((FBO_z_adhoc_117 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) obj)))) FBO_z_adhoc_117))
(bind-poly FBO_z FBO_z_adhoc_W0ZCTyosaTMyLFRleHR1cmUqLFRleHR1cmUqLGkzMixpMzJd "")
(register-lib-func xtmgl-objects2 FBO_h_adhoc_W0ZCTyosaTMyLFRleHR1cmUqLFRleHR1cmUqLGkzMixpMzJd [FBO*,i32,Texture*,Texture*,i32,i32]* 0 "" '(let ((FBO_h_adhoc_118 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4) (let ((obj (halloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) obj)))) FBO_h_adhoc_118))
(bind-poly FBO_h FBO_h_adhoc_W0ZCTyosaTMyLFRleHR1cmUqLFRleHR1cmUqLGkzMixpMzJd "")
(register-lib-func xtmgl-objects2 FBO_val_adhoc_W0ZCTyxpMzIsVGV4dHVyZSosVGV4dHVyZSosaTMyLGkzMl0 [FBO,i32,Texture*,Texture*,i32,i32]* 0 "" '(let ((FBO_val_adhoc_119 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4) (let ((obj:FBO* (salloc))) (tfill! obj arg_0 arg_1 arg_2 arg_3 arg_4) (pref obj 0))))) FBO_val_adhoc_119))
(bind-poly FBO_val FBO_val_adhoc_W0ZCTyxpMzIsVGV4dHVyZSosVGV4dHVyZSosaTMyLGkzMl0 "")
(register-lib-func xtmgl-objects2 hcopy_adhoc_W0ZCTyosRkJPKl0 [FBO*,FBO*]* 0 "" '(let ((hcopy_adhoc_120 (lambda (x:FBO*) (let ((obj (halloc))) (tset! obj 0 (tref x 0)) (if (not (null? (tref x 1))) (tset! obj 1 (hcopy:[Texture*,Texture*]* (tref x 1)))) (if (not (null? (tref x 2))) (tset! obj 2 (hcopy:[Texture*,Texture*]* (tref x 2)))) (tset! obj 3 (tref x 3)) (tset! obj 4 (tref x 4)) obj)))) hcopy_adhoc_120))
(bind-poly hcopy hcopy_adhoc_W0ZCTyosRkJPKl0 "")
(register-lib-func xtmgl-objects2 hfree_adhoc_W3ZvaWQsRkJPKl0 [void,FBO*]* 0 "" '(let ((hfree_adhoc_121 (lambda (x:FBO*) () (if (not (null? (tref x 1))) (hfree:[void,Texture*]* (tref x 1))) (if (not (null? (tref x 2))) (hfree:[void,Texture*]* (tref x 2))) () () (free x) void))) hfree_adhoc_121))
(bind-poly hfree hfree_adhoc_W3ZvaWQsRkJPKl0 "")
(register-lib-func xtmgl-objects2 zcopy_adhoc_W0ZCTyosRkJPKixtem9uZSosbXpvbmUqXQ [FBO*,FBO*,mzone*,mzone*]* 0 "" '(let ((zcopy_adhoc_122 (lambda (x:FBO* fromz toz) (if (llvm_ptr_in_zone fromz (cast x i8*)) (begin (push_zone toz) (let ((obj (zalloc))) (begin (tset! obj 0 (tref x 0))) (if (not (null? (tref x 1))) (tset! obj 1 (zcopy:[Texture*,Texture*,mzone*,mzone*]* (tref x 1) fromz toz))) (if (not (null? (tref x 2))) (tset! obj 2 (zcopy:[Texture*,Texture*,mzone*,mzone*]* (tref x 2) fromz toz))) (begin (tset! obj 3 (tref x 3))) (begin (tset! obj 4 (tref x 4))) (pop_zone) obj)) x)))) zcopy_adhoc_122))
(bind-poly zcopy zcopy_adhoc_W0ZCTyosRkJPKixtem9uZSosbXpvbmUqXQ "")
(register-lib-func xtmgl-objects2 id_adhoc_W2kzMixGQk8qXQ [i32,FBO*]* 0 "" '(let ((id_adhoc_123 (lambda (fbo:FBO*) (tref fbo 0)))) id_adhoc_123))
(bind-poly id id_adhoc_W2kzMixGQk8qXQ "")
(register-lib-func xtmgl-objects2 colour_tex_adhoc_W1RleHR1cmUqLEZCTypd [Texture*,FBO*]* 0 "" '(let ((colour_tex_adhoc_124 (lambda (fbo:FBO*) (tref fbo 1)))) colour_tex_adhoc_124))
(bind-poly colour_tex colour_tex_adhoc_W1RleHR1cmUqLEZCTypd "")
(register-lib-func xtmgl-objects2 depth_tex_adhoc_W1RleHR1cmUqLEZCTypd [Texture*,FBO*]* 0 "" '(let ((depth_tex_adhoc_125 (lambda (fbo:FBO*) (tref fbo 2)))) depth_tex_adhoc_125))
(bind-poly depth_tex depth_tex_adhoc_W1RleHR1cmUqLEZCTypd "")
(register-lib-func xtmgl-objects2 width_adhoc_W2kzMixGQk8qXQ [i32,FBO*]* 0 "" '(let ((width_adhoc_126 (lambda (fbo:FBO*) (tref fbo 3)))) width_adhoc_126))
(bind-poly width width_adhoc_W2kzMixGQk8qXQ "")
(register-lib-func xtmgl-objects2 height_adhoc_W2kzMixGQk8qXQ [i32,FBO*]* 0 "" '(let ((height_adhoc_127 (lambda (fbo:FBO*) (tref fbo 4)))) height_adhoc_127))
(bind-poly height height_adhoc_W2kzMixGQk8qXQ "")
(register-lib-func xtmgl-objects2 print_adhoc_W3ZvaWQsRkJPKl0 [void,FBO*]* 0 "" '(let ((print_adhoc_128 (lambda (fbo:FBO*) (if (null? fbo) (begin (printf "<FBO: 0x0>") void) (printout "<FBO: id=" (id fbo) " color_tex=" (colour_tex fbo) " depth_tex=" (depth_tex fbo) " width=" (width fbo) " height=" (height fbo) ">\n")) void))) print_adhoc_128))
(bind-poly print print_adhoc_W3ZvaWQsRkJPKl0 "")
(register-lib-func xtmgl-objects2 toString_adhoc_W1N0cmluZyosRkJPKl0 [String*,FBO*]* 0 "" '(let ((toString_adhoc_129 (lambda (fbo:FBO*) (let ((str:i8* (zalloc 256))) (if (null? fbo) (sprintf str "<FBO: 0x0>") (sprintf str "<FBO: id=%d color_tex=%d depth_tex=%d width=%d height=%d>" (id fbo) (colour_tex fbo) (depth_tex fbo) (width fbo) (height fbo))) (String str))))) toString_adhoc_129))
(bind-poly toString toString_adhoc_W1N0cmluZyosRkJPKl0 "")
(register-lib-func xtmgl-objects2 FBO_adhoc_W0ZCTypd [FBO*]* 0 "" '(let ((FBO_adhoc_130 (lambda () (let ((fbo (FBO:[FBO*,i32,Texture*,Texture*,i32,i32]* 0 null null 0 0))) (glGenFramebuffers 1 (tref-ptr fbo 0)) (gl_print_error "Error creating FBO") fbo)))) FBO_adhoc_130))
(bind-poly FBO FBO_adhoc_W0ZCTypd "")
(register-lib-func xtmgl-objects2 FBO_adhoc_W0ZCTyosVGV4dHVyZSpd [FBO*,Texture*]* 0 "" '(let ((FBO_adhoc_131 (lambda (colour:Texture*) (let ((fbo (FBO:[FBO*,i32,Texture*,Texture*,i32,i32]* 0 colour null (width colour) (height colour)))) (glGenFramebuffers 1 (tref-ptr fbo 0)) (gl_print_error "Error creating FBO") (glBindFramebuffer GL_FRAMEBUFFER (tref fbo 0)) (bind colour) (glFramebufferTexture2D GL_FRAMEBUFFER GL_COLOR_ATTACHMENT0 GL_TEXTURE_2D (id colour) 0) (unbind colour) (update colour) (glBindFramebuffer GL_FRAMEBUFFER 0) fbo)))) FBO_adhoc_131))
(bind-poly FBO FBO_adhoc_W0ZCTyosVGV4dHVyZSpd "")
(register-lib-func xtmgl-objects2 FBO_adhoc_W0ZCTyosVGV4dHVyZSosVGV4dHVyZSpd [FBO*,Texture*,Texture*]* 0 "" '(let ((FBO_adhoc_132 (lambda (colour:Texture* depth:Texture*) (let ((fbo (FBO:[FBO*,i32,Texture*,Texture*,i32,i32]* 0 colour depth (width colour) (height colour)))) (glGenFramebuffers 1 (tref-ptr fbo 0)) (gl_print_error "Error creating FBO") (glBindFramebuffer GL_FRAMEBUFFER (tref fbo 0)) (bind colour) (glFramebufferTexture2D GL_FRAMEBUFFER GL_COLOR_ATTACHMENT0 GL_TEXTURE_2D (id colour) 0) (unbind colour) (update colour) (bind depth) (glFramebufferTexture2D GL_FRAMEBUFFER GL_DEPTH_ATTACHMENT GL_TEXTURE_2D (id depth) 0) (unbind depth) (update depth) (glBindFramebuffer GL_FRAMEBUFFER 0) fbo)))) FBO_adhoc_132))
(bind-poly FBO FBO_adhoc_W0ZCTyosVGV4dHVyZSosVGV4dHVyZSpd "")
(register-lib-func xtmgl-objects2 FBO_adhoc_W0ZCTyosaTMyLGkzMl0 [FBO*,i32,i32]* 0 "" '(let ((FBO_adhoc_133 (lambda (width height) (FBO:[FBO*,Texture*]* (Texture:[Texture*,i32,i32,i32]* width height 4))))) FBO_adhoc_133))
(bind-poly FBO FBO_adhoc_W0ZCTyosaTMyLGkzMl0 "")
(register-lib-func xtmgl-objects2 FBO_adhoc_W0ZCTyosaTMyLGkzMixpMV0 [FBO*,i32,i32,i1]* 0 "" '(let ((FBO_adhoc_134 (lambda (width height depth:i1) (FBO:[FBO*,Texture*,Texture*]* (Texture:[Texture*,i32,i32,i32]* width height 4) (Texture:[Texture*,i32,i32,i32]* width height 1))))) FBO_adhoc_134))
(bind-poly FBO FBO_adhoc_W0ZCTyosaTMyLGkzMixpMV0 "")
(register-lib-func xtmgl-objects2 bind_adhoc_W2kzMixGQk8qXQ [i32,FBO*]* 0 "" '(let ((bind_adhoc_135 (lambda (fbo:FBO*) (glBindFramebuffer GL_FRAMEBUFFER (id fbo)) (id fbo)))) bind_adhoc_135))
(bind-poly bind bind_adhoc_W2kzMixGQk8qXQ "")
(register-lib-func xtmgl-objects2 unbind_adhoc_W2kzMixGQk8qXQ [i32,FBO*]* 0 "" '(let ((unbind_adhoc_136 (lambda (fbo:FBO*) (glBindFramebuffer GL_FRAMEBUFFER 0) (id fbo)))) unbind_adhoc_136))
(bind-poly unbind unbind_adhoc_W2kzMixGQk8qXQ "")
(register-lib-func xtmgl-objects2 pull_colour_adhoc_W2kzMixGQk8qXQ [i32,FBO*]* 0 "" '(let ((pull_colour_adhoc_137 (lambda (fbo:FBO*) (let ((tex (colour_tex fbo))) (glBindFramebuffer GL_FRAMEBUFFER (id fbo)) (glReadPixels 0 0 (width tex) (height tex) GL_RGBA GL_UNSIGNED_BYTE (data tex)) (glBindFramebuffer GL_FRAMEBUFFER 0) (id fbo))))) pull_colour_adhoc_137))
(bind-poly pull_colour pull_colour_adhoc_W2kzMixGQk8qXQ "")
(register-lib-func xtmgl-objects2 write_colour_adhoc_W3ZvaWQsRkJPKixTdHJpbmcqXQ [void,FBO*,String*]* 0 "" '(let ((write_colour_adhoc_138 (lambda (fbo:FBO* filename:String*) (pull_colour fbo) (write (colour_tex fbo) filename #t) void))) write_colour_adhoc_138))
(bind-poly write_colour write_colour_adhoc_W3ZvaWQsRkJPKixTdHJpbmcqXQ "")
(print-with-colors 'green 'default #t (print "done"))(print " in" (- (clock:clock) *xtmlib-gl-objects2-loaded-timer*) "seconds\n")
(define *xtmlib-gl-objects2-loaded-timer* (clock:clock))
(set! *impc:compiler:message:level* *impc:aot:prev-compiler-message-level*)
