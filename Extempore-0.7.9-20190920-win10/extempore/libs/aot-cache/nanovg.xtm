(sys:load "libs/base/base.xtm" 'quiet)
(sys:load "libs/external/gl.xtm" 'quiet)
(sys:load-preload-check 'nanovg)
(define *xtmlib-nanovg-loaded* #t)
(define *xtmlib-nanovg-loaded-timer* (clock:clock))
(set! *impc:aot:prev-compiler-message-level* *impc:compiler:message:level*)
(set! *impc:compiler:message:level* 'low)

(print "Loading ")
(print-with-colors 'blue 'default #t (print 'xtmnanovg))
(print " library... ")
(bind-dylib libnanovg (list "nanovg.dll"))(if (not 'libnanovg) (begin (print-with-colors '*impc:compiler:pretty-print-error-color* 'default #t (print "Error")) (print ": could not load the " 'libnanovg " dynamic library - perhaps you can install it through your package manager?\n") (error "")))
(bind-external-dylib-declarations "libnanovg" "xtmnanovg")
(llvm:compile-ir (sys:slurp-file "libs/aot-cache/xtmnanovg.ll"));; flush the JIT-compilation queue, so we only get this file's code in the module
(impc:compiler:flush-jit-compilation-queue)
(bind-alias NVGcontext i8 "")
(register-lib-type xtmnanovg NVGcolor <float,float,float,float> "")
(register-lib-func xtmnanovg NVGcolor_adhoc_W05WR2NvbG9yKixmbG9hdCxmbG9hdCxmbG9hdCxmbG9hdF0 [NVGcolor*,float,float,float,float]* 0 "" '(let ((NVGcolor_adhoc_1 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) obj)))) NVGcolor_adhoc_1))
(bind-poly NVGcolor NVGcolor_adhoc_W05WR2NvbG9yKixmbG9hdCxmbG9hdCxmbG9hdCxmbG9hdF0 "")
(register-lib-func xtmnanovg NVGcolor_z_adhoc_W05WR2NvbG9yKixmbG9hdCxmbG9hdCxmbG9hdCxmbG9hdF0 [NVGcolor*,float,float,float,float]* 0 "" '(let ((NVGcolor_z_adhoc_2 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) obj)))) NVGcolor_z_adhoc_2))
(bind-poly NVGcolor_z NVGcolor_z_adhoc_W05WR2NvbG9yKixmbG9hdCxmbG9hdCxmbG9hdCxmbG9hdF0 "")
(register-lib-func xtmnanovg NVGcolor_h_adhoc_W05WR2NvbG9yKixmbG9hdCxmbG9hdCxmbG9hdCxmbG9hdF0 [NVGcolor*,float,float,float,float]* 0 "" '(let ((NVGcolor_h_adhoc_3 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj (halloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) obj)))) NVGcolor_h_adhoc_3))
(bind-poly NVGcolor_h NVGcolor_h_adhoc_W05WR2NvbG9yKixmbG9hdCxmbG9hdCxmbG9hdCxmbG9hdF0 "")
(register-lib-func xtmnanovg NVGcolor_val_adhoc_W05WR2NvbG9yLGZsb2F0LGZsb2F0LGZsb2F0LGZsb2F0XQ [NVGcolor,float,float,float,float]* 0 "" '(let ((NVGcolor_val_adhoc_4 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj:NVGcolor* (salloc))) (tfill! obj arg_0 arg_1 arg_2 arg_3) (pref obj 0))))) NVGcolor_val_adhoc_4))
(bind-poly NVGcolor_val NVGcolor_val_adhoc_W05WR2NvbG9yLGZsb2F0LGZsb2F0LGZsb2F0LGZsb2F0XQ "")
(register-lib-func xtmnanovg hcopy_adhoc_W05WR2NvbG9yKixOVkdjb2xvcipd [NVGcolor*,NVGcolor*]* 0 "" '(let ((hcopy_adhoc_5 (lambda (x:NVGcolor*) (let ((obj (halloc))) (tset! obj 0 (tref x 0)) (tset! obj 1 (tref x 1)) (tset! obj 2 (tref x 2)) (tset! obj 3 (tref x 3)) obj)))) hcopy_adhoc_5))
(bind-poly hcopy hcopy_adhoc_W05WR2NvbG9yKixOVkdjb2xvcipd "")
(register-lib-func xtmnanovg hfree_adhoc_W3ZvaWQsTlZHY29sb3IqXQ [void,NVGcolor*]* 0 "" '(let ((hfree_adhoc_6 (lambda (x:NVGcolor*) () () () () (free x) void))) hfree_adhoc_6))
(bind-poly hfree hfree_adhoc_W3ZvaWQsTlZHY29sb3IqXQ "")
(register-lib-func xtmnanovg zcopy_adhoc_W05WR2NvbG9yKixOVkdjb2xvciosbXpvbmUqLG16b25lKl0 [NVGcolor*,NVGcolor*,mzone*,mzone*]* 0 "" '(let ((zcopy_adhoc_7 (lambda (x:NVGcolor* fromz toz) (if (llvm_ptr_in_zone fromz (cast x i8*)) (begin (push_zone toz) (let ((obj (zalloc))) (begin (tset! obj 0 (tref x 0))) (begin (tset! obj 1 (tref x 1))) (begin (tset! obj 2 (tref x 2))) (begin (tset! obj 3 (tref x 3))) (pop_zone) obj)) x)))) zcopy_adhoc_7))
(bind-poly zcopy zcopy_adhoc_W05WR2NvbG9yKixOVkdjb2xvciosbXpvbmUqLG16b25lKl0 "")
(register-lib-func xtmnanovg print_adhoc_W3ZvaWQsTlZHY29sb3IqXQ [void,NVGcolor*]* 0 "" '(let ((print_adhoc_8 (lambda (color:NVGcolor*) (printf "<NVGcolor: r=%.3f, g=%.3f, b=%.3f, a=%.3f>" (convert (tref color 0) double) (convert (tref color 1) double) (convert (tref color 2) double) (convert (tref color 3) double)) void))) print_adhoc_8))
(bind-poly print print_adhoc_W3ZvaWQsTlZHY29sb3IqXQ "")
(register-lib-func xtmnanovg NVGcolor_hex_adhoc_W05WR2NvbG9yKixpNjRd [NVGcolor*,i64]* 0 "takes a 8-digit hex string (e.g. #x12ab3eff) and returns an NVGcolor\r\n\r\n@param hex_value - should be RGBA, with two digits per channel.\r\n\r\n@example\r\n (set! red   (NVGcolor_hex #xFF0000FF))\r\n (set! green (NVGcolor_hex #x00FF00FF))\r\n (set! blue  (NVGcolor_hex #x0000FFFF))" '(let ((NVGcolor_hex_adhoc_9 (lambda (hex_value:i64) (NVGcolor (/ (convert (>> (& hex_value -16777216) (* 4 6)) float) (convert 255 float)) (/ (convert (>> (& hex_value 16711680) (* 4 4)) float) (convert 255 float)) (/ (convert (>> (& hex_value 65280) (* 4 2)) float) (convert 255 float)) (/ (convert (& hex_value 255) float) (convert 255 float)))))) NVGcolor_hex_adhoc_9))
(bind-poly NVGcolor_hex NVGcolor_hex_adhoc_W05WR2NvbG9yKixpNjRd "")
(register-lib-type xtmnanovg NVGpaint <|6,float|,|2,float|,float,float,NVGcolor,NVGcolor,i32> "")
(register-lib-func xtmnanovg NVGpaint_adhoc_W05WR3BhaW50Kix8NixmbG9hdHwsfDIsZmxvYXR8LGZsb2F0LGZsb2F0LE5WR2NvbG9yLE5WR2NvbG9yLGkzMl0 [NVGpaint*,|6,float|,|2,float|,float,float,NVGcolor,NVGcolor,i32]* 0 "" '(let ((NVGpaint_adhoc_10 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4 arg_5 arg_6) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) (tset! obj 5 arg_5) (tset! obj 6 arg_6) obj)))) NVGpaint_adhoc_10))
(bind-poly NVGpaint NVGpaint_adhoc_W05WR3BhaW50Kix8NixmbG9hdHwsfDIsZmxvYXR8LGZsb2F0LGZsb2F0LE5WR2NvbG9yLE5WR2NvbG9yLGkzMl0 "")
(register-lib-func xtmnanovg NVGpaint_z_adhoc_W05WR3BhaW50Kix8NixmbG9hdHwsfDIsZmxvYXR8LGZsb2F0LGZsb2F0LE5WR2NvbG9yLE5WR2NvbG9yLGkzMl0 [NVGpaint*,|6,float|,|2,float|,float,float,NVGcolor,NVGcolor,i32]* 0 "" '(let ((NVGpaint_z_adhoc_11 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4 arg_5 arg_6) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) (tset! obj 5 arg_5) (tset! obj 6 arg_6) obj)))) NVGpaint_z_adhoc_11))
(bind-poly NVGpaint_z NVGpaint_z_adhoc_W05WR3BhaW50Kix8NixmbG9hdHwsfDIsZmxvYXR8LGZsb2F0LGZsb2F0LE5WR2NvbG9yLE5WR2NvbG9yLGkzMl0 "")
(register-lib-func xtmnanovg NVGpaint_h_adhoc_W05WR3BhaW50Kix8NixmbG9hdHwsfDIsZmxvYXR8LGZsb2F0LGZsb2F0LE5WR2NvbG9yLE5WR2NvbG9yLGkzMl0 [NVGpaint*,|6,float|,|2,float|,float,float,NVGcolor,NVGcolor,i32]* 0 "" '(let ((NVGpaint_h_adhoc_12 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4 arg_5 arg_6) (let ((obj (halloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) (tset! obj 5 arg_5) (tset! obj 6 arg_6) obj)))) NVGpaint_h_adhoc_12))
(bind-poly NVGpaint_h NVGpaint_h_adhoc_W05WR3BhaW50Kix8NixmbG9hdHwsfDIsZmxvYXR8LGZsb2F0LGZsb2F0LE5WR2NvbG9yLE5WR2NvbG9yLGkzMl0 "")
(register-lib-func xtmnanovg NVGpaint_val_adhoc_W05WR3BhaW50LHw2LGZsb2F0fCx8MixmbG9hdHwsZmxvYXQsZmxvYXQsTlZHY29sb3IsTlZHY29sb3IsaTMyXQ [NVGpaint,|6,float|,|2,float|,float,float,NVGcolor,NVGcolor,i32]* 0 "" '(let ((NVGpaint_val_adhoc_13 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4 arg_5 arg_6) (let ((obj:NVGpaint* (salloc))) (tfill! obj arg_0 arg_1 arg_2 arg_3 arg_4 arg_5 arg_6) (pref obj 0))))) NVGpaint_val_adhoc_13))
(bind-poly NVGpaint_val NVGpaint_val_adhoc_W05WR3BhaW50LHw2LGZsb2F0fCx8MixmbG9hdHwsZmxvYXQsZmxvYXQsTlZHY29sb3IsTlZHY29sb3IsaTMyXQ "")
(register-lib-func xtmnanovg hcopy_adhoc_W05WR3BhaW50KixOVkdwYWludCpd [NVGpaint*,NVGpaint*]* 0 "" '(let ((hcopy_adhoc_14 (lambda (x:NVGpaint*) (let ((obj (halloc))) (tset! obj 0 (tref x 0)) (tset! obj 1 (tref x 1)) (tset! obj 2 (tref x 2)) (tset! obj 3 (tref x 3)) (tset! obj 4 (tref x 4)) (tset! obj 5 (tref x 5)) (tset! obj 6 (tref x 6)) obj)))) hcopy_adhoc_14))
(bind-poly hcopy hcopy_adhoc_W05WR3BhaW50KixOVkdwYWludCpd "")
(register-lib-func xtmnanovg hfree_adhoc_W3ZvaWQsTlZHcGFpbnQqXQ [void,NVGpaint*]* 0 "" '(let ((hfree_adhoc_15 (lambda (x:NVGpaint*) () () () () () () () (free x) void))) hfree_adhoc_15))
(bind-poly hfree hfree_adhoc_W3ZvaWQsTlZHcGFpbnQqXQ "")
(register-lib-func xtmnanovg zcopy_adhoc_W05WR3BhaW50KixOVkdwYWludCosbXpvbmUqLG16b25lKl0 [NVGpaint*,NVGpaint*,mzone*,mzone*]* 0 "" '(let ((zcopy_adhoc_16 (lambda (x:NVGpaint* fromz toz) (if (llvm_ptr_in_zone fromz (cast x i8*)) (begin (push_zone toz) (let ((obj (zalloc))) (begin (tset! obj 0 (tref x 0))) (begin (tset! obj 1 (tref x 1))) (begin (tset! obj 2 (tref x 2))) (begin (tset! obj 3 (tref x 3))) (begin (tset! obj 4 (tref x 4))) (begin (tset! obj 5 (tref x 5))) (begin (tset! obj 6 (tref x 6))) (pop_zone) obj)) x)))) zcopy_adhoc_16))
(bind-poly zcopy zcopy_adhoc_W05WR3BhaW50KixOVkdwYWludCosbXpvbmUqLG16b25lKl0 "")
(register-lib-func xtmnanovg print_adhoc_W3ZvaWQsTlZHcGFpbnQqXQ [void,NVGpaint*]* 0 "" '(let ((print_adhoc_17 (lambda (paint:NVGpaint*) (printf "<NVGpaint:\n    xform=|") (printf "%.3f " (convert (aref (tref paint 0) 0) double)) (printf "%.3f " (convert (aref (tref paint 0) 1) double)) (printf "%.3f " (convert (aref (tref paint 0) 2) double)) (printf "%.3f " (convert (aref (tref paint 0) 3) double)) (printf "%.3f " (convert (aref (tref paint 0) 4) double)) (printf "%.3f|" (convert (aref (tref paint 0) 5) double)) (printf "\n    extent=|%.3f %.3f|\n" (convert (aref (tref paint 1) 0) double) (convert (aref (tref paint 1) 1) double)) (printf "    radius=%.3f\n    feather=%.3f\n" (convert (tref paint 2) double) (convert (tref paint 3) double)) (printf "    innerColor=<NVGcolor: r=%.3f, g=%.3f, b=%.3f, a=%.3f>\n" (convert (tref (tref paint 4) 0) double) (convert (tref (tref paint 4) 1) double) (convert (tref (tref paint 4) 2) double) (convert (tref (tref paint 4) 3) double)) (printf "    outerColor=<NVGcolor: r=%.3f, g=%.3f, b=%.3f, a=%.3f>\n" (convert (tref (tref paint 5) 0) double) (convert (tref (tref paint 5) 1) double) (convert (tref (tref paint 5) 2) double) (convert (tref (tref paint 5) 3) double)) (printf "    image=%d>" (tref paint 6)) void))) print_adhoc_17))
(bind-poly print print_adhoc_W3ZvaWQsTlZHcGFpbnQqXQ "")
(bind-alias NVGwinding i32 "")
(register-lib-val xtmnanovg NVG_CCW i32 "")
(register-lib-val xtmnanovg NVG_CW i32 "")
(bind-alias NVGsolidity i32 "")
(register-lib-val xtmnanovg NVG_SOLID i32 "")
(register-lib-val xtmnanovg NVG_HOLE i32 "")
(bind-alias NVGlineCap i32 "")
(register-lib-val xtmnanovg NVG_BUTT i32 "")
(register-lib-val xtmnanovg NVG_ROUND i32 "")
(register-lib-val xtmnanovg NVG_SQUARE i32 "")
(register-lib-val xtmnanovg NVG_BEVEL i32 "")
(register-lib-val xtmnanovg NVG_MITER i32 "")
(bind-alias NVGalign i32 "")
(register-lib-val xtmnanovg NVG_ALIGN_LEFT i32 "")
(call-as-xtlang (set! NVG_ALIGN_LEFT (convert (<< 1 0) NVGalign)) void)
(register-lib-val xtmnanovg NVG_ALIGN_CENTER i32 "")
(call-as-xtlang (set! NVG_ALIGN_CENTER (convert (<< 1 1) NVGalign)) void)
(register-lib-val xtmnanovg NVG_ALIGN_RIGHT i32 "")
(call-as-xtlang (set! NVG_ALIGN_RIGHT (convert (<< 1 2) NVGalign)) void)
(register-lib-val xtmnanovg NVG_ALIGN_TOP i32 "")
(call-as-xtlang (set! NVG_ALIGN_TOP (convert (<< 1 3) NVGalign)) void)
(register-lib-val xtmnanovg NVG_ALIGN_MIDDLE i32 "")
(call-as-xtlang (set! NVG_ALIGN_MIDDLE (convert (<< 1 4) NVGalign)) void)
(register-lib-val xtmnanovg NVG_ALIGN_BOTTOM i32 "")
(call-as-xtlang (set! NVG_ALIGN_BOTTOM (convert (<< 1 5) NVGalign)) void)
(register-lib-val xtmnanovg NVG_ALIGN_BASELINE i32 "")
(call-as-xtlang (set! NVG_ALIGN_BASELINE (convert (<< 1 6) NVGalign)) void)
(bind-alias NVGblendFactor i32 "")
(register-lib-val xtmnanovg NVG_ZERO i32 "")
(call-as-xtlang (set! NVG_ZERO (convert (<< 1 0) enum)) void)
(register-lib-val xtmnanovg NVG_ONE i32 "")
(call-as-xtlang (set! NVG_ONE (convert (<< 1 1) enum)) void)
(register-lib-val xtmnanovg NVG_SRC_COLOR i32 "")
(call-as-xtlang (set! NVG_SRC_COLOR (convert (<< 1 2) enum)) void)
(register-lib-val xtmnanovg NVG_ONE_MINUS_SRC_COLOR i32 "")
(call-as-xtlang (set! NVG_ONE_MINUS_SRC_COLOR (convert (<< 1 3) enum)) void)
(register-lib-val xtmnanovg NVG_DST_COLOR i32 "")
(call-as-xtlang (set! NVG_DST_COLOR (convert (<< 1 4) enum)) void)
(register-lib-val xtmnanovg NVG_ONE_MINUS_DST_COLOR i32 "")
(call-as-xtlang (set! NVG_ONE_MINUS_DST_COLOR (convert (<< 1 5) enum)) void)
(register-lib-val xtmnanovg NVG_SRC_ALPHA i32 "")
(call-as-xtlang (set! NVG_SRC_ALPHA (convert (<< 1 6) enum)) void)
(register-lib-val xtmnanovg NVG_ONE_MINUS_SRC_ALPHA i32 "")
(call-as-xtlang (set! NVG_ONE_MINUS_SRC_ALPHA (convert (<< 1 7) enum)) void)
(register-lib-val xtmnanovg NVG_DST_ALPHA i32 "")
(call-as-xtlang (set! NVG_DST_ALPHA (convert (<< 1 8) enum)) void)
(register-lib-val xtmnanovg NVG_ONE_MINUS_DST_ALPHA i32 "")
(call-as-xtlang (set! NVG_ONE_MINUS_DST_ALPHA (convert (<< 1 9) enum)) void)
(register-lib-val xtmnanovg NVG_SRC_ALPHA_SATURATE i32 "")
(call-as-xtlang (set! NVG_SRC_ALPHA_SATURATE (convert (<< 1 10) enum)) void)
(bind-alias NVGcompositeOperation i32 "")
(register-lib-val xtmnanovg NVG_SOURCE_OVER i32 "")
(register-lib-val xtmnanovg NVG_SOURCE_IN i32 "")
(register-lib-val xtmnanovg NVG_SOURCE_OUT i32 "")
(register-lib-val xtmnanovg NVG_ATOP i32 "")
(register-lib-val xtmnanovg NVG_DESTINATION_OVER i32 "")
(register-lib-val xtmnanovg NVG_DESTINATION_IN i32 "")
(register-lib-val xtmnanovg NVG_DESTINATION_OUT i32 "")
(register-lib-val xtmnanovg NVG_DESTINATION_ATOP i32 "")
(register-lib-val xtmnanovg NVG_LIGHTER i32 "")
(register-lib-val xtmnanovg NVG_COPY i32 "")
(register-lib-val xtmnanovg NVG_XOR i32 "")
(register-lib-type xtmnanovg NVGcompositeOperationState <i32,i32,i32,i32> "@member srcRGB - index 0\r\n@member dstRGB - index 1\r\n@member srcAlpha - index 2\r\n@member dstAlpha - index 3")
(register-lib-func xtmnanovg NVGcompositeOperationState_adhoc_W05WR2NvbXBvc2l0ZU9wZXJhdGlvblN0YXRlKixpMzIsaTMyLGkzMixpMzJd [NVGcompositeOperationState*,i32,i32,i32,i32]* 0 "" '(let ((NVGcompositeOperationState_adhoc_18 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) obj)))) NVGcompositeOperationState_adhoc_18))
(bind-poly NVGcompositeOperationState NVGcompositeOperationState_adhoc_W05WR2NvbXBvc2l0ZU9wZXJhdGlvblN0YXRlKixpMzIsaTMyLGkzMixpMzJd "")
(register-lib-func xtmnanovg NVGcompositeOperationState_z_adhoc_W05WR2NvbXBvc2l0ZU9wZXJhdGlvblN0YXRlKixpMzIsaTMyLGkzMixpMzJd [NVGcompositeOperationState*,i32,i32,i32,i32]* 0 "" '(let ((NVGcompositeOperationState_z_adhoc_19 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) obj)))) NVGcompositeOperationState_z_adhoc_19))
(bind-poly NVGcompositeOperationState_z NVGcompositeOperationState_z_adhoc_W05WR2NvbXBvc2l0ZU9wZXJhdGlvblN0YXRlKixpMzIsaTMyLGkzMixpMzJd "")
(register-lib-func xtmnanovg NVGcompositeOperationState_h_adhoc_W05WR2NvbXBvc2l0ZU9wZXJhdGlvblN0YXRlKixpMzIsaTMyLGkzMixpMzJd [NVGcompositeOperationState*,i32,i32,i32,i32]* 0 "" '(let ((NVGcompositeOperationState_h_adhoc_20 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj (halloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) obj)))) NVGcompositeOperationState_h_adhoc_20))
(bind-poly NVGcompositeOperationState_h NVGcompositeOperationState_h_adhoc_W05WR2NvbXBvc2l0ZU9wZXJhdGlvblN0YXRlKixpMzIsaTMyLGkzMixpMzJd "")
(register-lib-func xtmnanovg toString_adhoc_W1N0cmluZyosTlZHY29tcG9zaXRlT3BlcmF0aW9uU3RhdGUqXQ [String*,NVGcompositeOperationState*]* 0 "" '(let ((toString_adhoc_21 (lambda (x:NVGcompositeOperationState*) (if (null? x) (sprintout "<NVGcompositeOperationState:null>") (sprintout "<NVGcompositeOperationState:" (tref x 0) "," (tref x 1) "," (tref x 2) "," (tref x 3) ">"))))) toString_adhoc_21))
(bind-poly toString toString_adhoc_W1N0cmluZyosTlZHY29tcG9zaXRlT3BlcmF0aW9uU3RhdGUqXQ "")
(register-lib-func xtmnanovg print_adhoc_W3ZvaWQsTlZHY29tcG9zaXRlT3BlcmF0aW9uU3RhdGUqXQ [void,NVGcompositeOperationState*]* 0 "" '(let ((print_adhoc_22 (lambda (x:NVGcompositeOperationState*) (if (null? x) (printout "<NVGcompositeOperationState:null>") (printout "<NVGcompositeOperationState:" (tref x 0) "," (tref x 1) "," (tref x 2) "," (tref x 3) ">")) void))) print_adhoc_22))
(bind-poly print print_adhoc_W3ZvaWQsTlZHY29tcG9zaXRlT3BlcmF0aW9uU3RhdGUqXQ "")
(register-lib-func xtmnanovg NVGcompositeOperationState_val_adhoc_W05WR2NvbXBvc2l0ZU9wZXJhdGlvblN0YXRlLGkzMixpMzIsaTMyLGkzMl0 [NVGcompositeOperationState,i32,i32,i32,i32]* 0 "" '(let ((NVGcompositeOperationState_val_adhoc_23 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj:NVGcompositeOperationState* (salloc))) (tfill! obj arg_0 arg_1 arg_2 arg_3) (pref obj 0))))) NVGcompositeOperationState_val_adhoc_23))
(bind-poly NVGcompositeOperationState_val NVGcompositeOperationState_val_adhoc_W05WR2NvbXBvc2l0ZU9wZXJhdGlvblN0YXRlLGkzMixpMzIsaTMyLGkzMl0 "")
(register-lib-func xtmnanovg hcopy_adhoc_W05WR2NvbXBvc2l0ZU9wZXJhdGlvblN0YXRlKixOVkdjb21wb3NpdGVPcGVyYXRpb25TdGF0ZSpd [NVGcompositeOperationState*,NVGcompositeOperationState*]* 0 "" '(let ((hcopy_adhoc_24 (lambda (x:NVGcompositeOperationState*) (let ((obj (halloc))) (tset! obj 0 (tref x 0)) (tset! obj 1 (tref x 1)) (tset! obj 2 (tref x 2)) (tset! obj 3 (tref x 3)) obj)))) hcopy_adhoc_24))
(bind-poly hcopy hcopy_adhoc_W05WR2NvbXBvc2l0ZU9wZXJhdGlvblN0YXRlKixOVkdjb21wb3NpdGVPcGVyYXRpb25TdGF0ZSpd "")
(register-lib-func xtmnanovg hfree_adhoc_W3ZvaWQsTlZHY29tcG9zaXRlT3BlcmF0aW9uU3RhdGUqXQ [void,NVGcompositeOperationState*]* 0 "" '(let ((hfree_adhoc_25 (lambda (x:NVGcompositeOperationState*) () () () () (free x) void))) hfree_adhoc_25))
(bind-poly hfree hfree_adhoc_W3ZvaWQsTlZHY29tcG9zaXRlT3BlcmF0aW9uU3RhdGUqXQ "")
(register-lib-func xtmnanovg zcopy_adhoc_W05WR2NvbXBvc2l0ZU9wZXJhdGlvblN0YXRlKixOVkdjb21wb3NpdGVPcGVyYXRpb25TdGF0ZSosbXpvbmUqLG16b25lKl0 [NVGcompositeOperationState*,NVGcompositeOperationState*,mzone*,mzone*]* 0 "" '(let ((zcopy_adhoc_26 (lambda (x:NVGcompositeOperationState* fromz toz) (if (llvm_ptr_in_zone fromz (cast x i8*)) (begin (push_zone toz) (let ((obj (zalloc))) (begin (tset! obj 0 (tref x 0))) (begin (tset! obj 1 (tref x 1))) (begin (tset! obj 2 (tref x 2))) (begin (tset! obj 3 (tref x 3))) (pop_zone) obj)) x)))) zcopy_adhoc_26))
(bind-poly zcopy zcopy_adhoc_W05WR2NvbXBvc2l0ZU9wZXJhdGlvblN0YXRlKixOVkdjb21wb3NpdGVPcGVyYXRpb25TdGF0ZSosbXpvbmUqLG16b25lKl0 "")
(llvm:bind-symbol libnanovg "nvgGlobalCompositeOperation")
(bind-lib libnanovg nvgGlobalCompositeOperation [void,NVGcontext*,i32]*)
(llvm:bind-symbol libnanovg "nvgGlobalCompositeBlendFunc")
(bind-lib libnanovg nvgGlobalCompositeBlendFunc [void,NVGcontext*,i32,i32]*)
(llvm:bind-symbol libnanovg "nvgGlobalCompositeBlendFuncSeparate")
(bind-lib libnanovg nvgGlobalCompositeBlendFuncSeparate [void,NVGcontext*,i32,i32,i32,i32]*)
(register-lib-type xtmnanovg NVGglyphPosition <i8*,float,float,float> "")
(register-lib-func xtmnanovg NVGglyphPosition_adhoc_W05WR2dseXBoUG9zaXRpb24qLGk4KixmbG9hdCxmbG9hdCxmbG9hdF0 [NVGglyphPosition*,i8*,float,float,float]* 0 "" '(let ((NVGglyphPosition_adhoc_27 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) obj)))) NVGglyphPosition_adhoc_27))
(bind-poly NVGglyphPosition NVGglyphPosition_adhoc_W05WR2dseXBoUG9zaXRpb24qLGk4KixmbG9hdCxmbG9hdCxmbG9hdF0 "")
(register-lib-func xtmnanovg NVGglyphPosition_z_adhoc_W05WR2dseXBoUG9zaXRpb24qLGk4KixmbG9hdCxmbG9hdCxmbG9hdF0 [NVGglyphPosition*,i8*,float,float,float]* 0 "" '(let ((NVGglyphPosition_z_adhoc_28 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) obj)))) NVGglyphPosition_z_adhoc_28))
(bind-poly NVGglyphPosition_z NVGglyphPosition_z_adhoc_W05WR2dseXBoUG9zaXRpb24qLGk4KixmbG9hdCxmbG9hdCxmbG9hdF0 "")
(register-lib-func xtmnanovg NVGglyphPosition_h_adhoc_W05WR2dseXBoUG9zaXRpb24qLGk4KixmbG9hdCxmbG9hdCxmbG9hdF0 [NVGglyphPosition*,i8*,float,float,float]* 0 "" '(let ((NVGglyphPosition_h_adhoc_29 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj (halloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) obj)))) NVGglyphPosition_h_adhoc_29))
(bind-poly NVGglyphPosition_h NVGglyphPosition_h_adhoc_W05WR2dseXBoUG9zaXRpb24qLGk4KixmbG9hdCxmbG9hdCxmbG9hdF0 "")
(register-lib-func xtmnanovg toString_adhoc_W1N0cmluZyosTlZHZ2x5cGhQb3NpdGlvbipd [String*,NVGglyphPosition*]* 0 "" '(let ((toString_adhoc_30 (lambda (x:NVGglyphPosition*) (if (null? x) (sprintout "<NVGglyphPosition:null>") (sprintout "<NVGglyphPosition:" (tref x 0) "," (tref x 1) "," (tref x 2) "," (tref x 3) ">"))))) toString_adhoc_30))
(bind-poly toString toString_adhoc_W1N0cmluZyosTlZHZ2x5cGhQb3NpdGlvbipd "")
(register-lib-func xtmnanovg print_adhoc_W3ZvaWQsTlZHZ2x5cGhQb3NpdGlvbipd [void,NVGglyphPosition*]* 0 "" '(let ((print_adhoc_31 (lambda (x:NVGglyphPosition*) (if (null? x) (printout "<NVGglyphPosition:null>") (printout "<NVGglyphPosition:" (tref x 0) "," (tref x 1) "," (tref x 2) "," (tref x 3) ">")) void))) print_adhoc_31))
(bind-poly print print_adhoc_W3ZvaWQsTlZHZ2x5cGhQb3NpdGlvbipd "")
(register-lib-func xtmnanovg NVGglyphPosition_val_adhoc_W05WR2dseXBoUG9zaXRpb24saTgqLGZsb2F0LGZsb2F0LGZsb2F0XQ [NVGglyphPosition,i8*,float,float,float]* 0 "" '(let ((NVGglyphPosition_val_adhoc_32 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj:NVGglyphPosition* (salloc))) (tfill! obj arg_0 arg_1 arg_2 arg_3) (pref obj 0))))) NVGglyphPosition_val_adhoc_32))
(bind-poly NVGglyphPosition_val NVGglyphPosition_val_adhoc_W05WR2dseXBoUG9zaXRpb24saTgqLGZsb2F0LGZsb2F0LGZsb2F0XQ "")
(register-lib-func xtmnanovg hcopy_adhoc_W05WR2dseXBoUG9zaXRpb24qLE5WR2dseXBoUG9zaXRpb24qXQ [NVGglyphPosition*,NVGglyphPosition*]* 0 "" '(let ((hcopy_adhoc_33 (lambda (x:NVGglyphPosition*) (let ((obj (halloc))) (tset! obj 0 (tref x 0)) (tset! obj 1 (tref x 1)) (tset! obj 2 (tref x 2)) (tset! obj 3 (tref x 3)) obj)))) hcopy_adhoc_33))
(bind-poly hcopy hcopy_adhoc_W05WR2dseXBoUG9zaXRpb24qLE5WR2dseXBoUG9zaXRpb24qXQ "")
(register-lib-func xtmnanovg hfree_adhoc_W3ZvaWQsTlZHZ2x5cGhQb3NpdGlvbipd [void,NVGglyphPosition*]* 0 "" '(let ((hfree_adhoc_34 (lambda (x:NVGglyphPosition*) () () () () (free x) void))) hfree_adhoc_34))
(bind-poly hfree hfree_adhoc_W3ZvaWQsTlZHZ2x5cGhQb3NpdGlvbipd "")
(register-lib-func xtmnanovg zcopy_adhoc_W05WR2dseXBoUG9zaXRpb24qLE5WR2dseXBoUG9zaXRpb24qLG16b25lKixtem9uZSpd [NVGglyphPosition*,NVGglyphPosition*,mzone*,mzone*]* 0 "" '(let ((zcopy_adhoc_35 (lambda (x:NVGglyphPosition* fromz toz) (if (llvm_ptr_in_zone fromz (cast x i8*)) (begin (push_zone toz) (let ((obj (zalloc))) (if (llvm_ptr_in_zone fromz (cast (tref x 0) i8*)) (let ((newptr:i8* (zalloc))) (memcpy (cast newptr i8*) (cast (tref x 0) i8*) 1) (tset! obj 0 newptr)) (tset! obj 0 (tref x 0))) (begin (tset! obj 1 (tref x 1))) (begin (tset! obj 2 (tref x 2))) (begin (tset! obj 3 (tref x 3))) (pop_zone) obj)) x)))) zcopy_adhoc_35))
(bind-poly zcopy zcopy_adhoc_W05WR2dseXBoUG9zaXRpb24qLE5WR2dseXBoUG9zaXRpb24qLG16b25lKixtem9uZSpd "")
(register-lib-type xtmnanovg NVGtextRow <i8*,i8*,i8*,float,float,float> "")
(register-lib-func xtmnanovg NVGtextRow_adhoc_W05WR3RleHRSb3cqLGk4KixpOCosaTgqLGZsb2F0LGZsb2F0LGZsb2F0XQ [NVGtextRow*,i8*,i8*,i8*,float,float,float]* 0 "" '(let ((NVGtextRow_adhoc_36 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4 arg_5) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) (tset! obj 5 arg_5) obj)))) NVGtextRow_adhoc_36))
(bind-poly NVGtextRow NVGtextRow_adhoc_W05WR3RleHRSb3cqLGk4KixpOCosaTgqLGZsb2F0LGZsb2F0LGZsb2F0XQ "")
(register-lib-func xtmnanovg NVGtextRow_z_adhoc_W05WR3RleHRSb3cqLGk4KixpOCosaTgqLGZsb2F0LGZsb2F0LGZsb2F0XQ [NVGtextRow*,i8*,i8*,i8*,float,float,float]* 0 "" '(let ((NVGtextRow_z_adhoc_37 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4 arg_5) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) (tset! obj 5 arg_5) obj)))) NVGtextRow_z_adhoc_37))
(bind-poly NVGtextRow_z NVGtextRow_z_adhoc_W05WR3RleHRSb3cqLGk4KixpOCosaTgqLGZsb2F0LGZsb2F0LGZsb2F0XQ "")
(register-lib-func xtmnanovg NVGtextRow_h_adhoc_W05WR3RleHRSb3cqLGk4KixpOCosaTgqLGZsb2F0LGZsb2F0LGZsb2F0XQ [NVGtextRow*,i8*,i8*,i8*,float,float,float]* 0 "" '(let ((NVGtextRow_h_adhoc_38 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4 arg_5) (let ((obj (halloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) (tset! obj 5 arg_5) obj)))) NVGtextRow_h_adhoc_38))
(bind-poly NVGtextRow_h NVGtextRow_h_adhoc_W05WR3RleHRSb3cqLGk4KixpOCosaTgqLGZsb2F0LGZsb2F0LGZsb2F0XQ "")
(register-lib-func xtmnanovg toString_adhoc_W1N0cmluZyosTlZHdGV4dFJvdypd [String*,NVGtextRow*]* 0 "" '(let ((toString_adhoc_39 (lambda (x:NVGtextRow*) (if (null? x) (sprintout "<NVGtextRow:null>") (sprintout "<NVGtextRow:" (tref x 0) "," (tref x 1) "," (tref x 2) "," (tref x 3) "," (tref x 4) "," (tref x 5) ">"))))) toString_adhoc_39))
(bind-poly toString toString_adhoc_W1N0cmluZyosTlZHdGV4dFJvdypd "")
(register-lib-func xtmnanovg print_adhoc_W3ZvaWQsTlZHdGV4dFJvdypd [void,NVGtextRow*]* 0 "" '(let ((print_adhoc_40 (lambda (x:NVGtextRow*) (if (null? x) (printout "<NVGtextRow:null>") (printout "<NVGtextRow:" (tref x 0) "," (tref x 1) "," (tref x 2) "," (tref x 3) "," (tref x 4) "," (tref x 5) ">")) void))) print_adhoc_40))
(bind-poly print print_adhoc_W3ZvaWQsTlZHdGV4dFJvdypd "")
(register-lib-func xtmnanovg NVGtextRow_val_adhoc_W05WR3RleHRSb3csaTgqLGk4KixpOCosZmxvYXQsZmxvYXQsZmxvYXRd [NVGtextRow,i8*,i8*,i8*,float,float,float]* 0 "" '(let ((NVGtextRow_val_adhoc_41 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4 arg_5) (let ((obj:NVGtextRow* (salloc))) (tfill! obj arg_0 arg_1 arg_2 arg_3 arg_4 arg_5) (pref obj 0))))) NVGtextRow_val_adhoc_41))
(bind-poly NVGtextRow_val NVGtextRow_val_adhoc_W05WR3RleHRSb3csaTgqLGk4KixpOCosZmxvYXQsZmxvYXQsZmxvYXRd "")
(register-lib-func xtmnanovg hcopy_adhoc_W05WR3RleHRSb3cqLE5WR3RleHRSb3cqXQ [NVGtextRow*,NVGtextRow*]* 0 "" '(let ((hcopy_adhoc_42 (lambda (x:NVGtextRow*) (let ((obj (halloc))) (tset! obj 0 (tref x 0)) (tset! obj 1 (tref x 1)) (tset! obj 2 (tref x 2)) (tset! obj 3 (tref x 3)) (tset! obj 4 (tref x 4)) (tset! obj 5 (tref x 5)) obj)))) hcopy_adhoc_42))
(bind-poly hcopy hcopy_adhoc_W05WR3RleHRSb3cqLE5WR3RleHRSb3cqXQ "")
(register-lib-func xtmnanovg hfree_adhoc_W3ZvaWQsTlZHdGV4dFJvdypd [void,NVGtextRow*]* 0 "" '(let ((hfree_adhoc_43 (lambda (x:NVGtextRow*) () () () () () () (free x) void))) hfree_adhoc_43))
(bind-poly hfree hfree_adhoc_W3ZvaWQsTlZHdGV4dFJvdypd "")
(register-lib-func xtmnanovg zcopy_adhoc_W05WR3RleHRSb3cqLE5WR3RleHRSb3cqLG16b25lKixtem9uZSpd [NVGtextRow*,NVGtextRow*,mzone*,mzone*]* 0 "" '(let ((zcopy_adhoc_44 (lambda (x:NVGtextRow* fromz toz) (if (llvm_ptr_in_zone fromz (cast x i8*)) (begin (push_zone toz) (let ((obj (zalloc))) (if (llvm_ptr_in_zone fromz (cast (tref x 0) i8*)) (let ((newptr:i8* (zalloc))) (memcpy (cast newptr i8*) (cast (tref x 0) i8*) 1) (tset! obj 0 newptr)) (tset! obj 0 (tref x 0))) (if (llvm_ptr_in_zone fromz (cast (tref x 1) i8*)) (let ((newptr:i8* (zalloc))) (memcpy (cast newptr i8*) (cast (tref x 1) i8*) 1) (tset! obj 1 newptr)) (tset! obj 1 (tref x 1))) (if (llvm_ptr_in_zone fromz (cast (tref x 2) i8*)) (let ((newptr:i8* (zalloc))) (memcpy (cast newptr i8*) (cast (tref x 2) i8*) 1) (tset! obj 2 newptr)) (tset! obj 2 (tref x 2))) (begin (tset! obj 3 (tref x 3))) (begin (tset! obj 4 (tref x 4))) (begin (tset! obj 5 (tref x 5))) (pop_zone) obj)) x)))) zcopy_adhoc_44))
(bind-poly zcopy zcopy_adhoc_W05WR3RleHRSb3cqLE5WR3RleHRSb3cqLG16b25lKixtem9uZSpd "")
(bind-alias NVGimageFlags i32 "")
(register-lib-val xtmnanovg NVG_IMAGE_GENERATE_MIPMAPS i32 "")
(call-as-xtlang (set! NVG_IMAGE_GENERATE_MIPMAPS (convert (<< 1 0) NVGimageFlags)) void)
(register-lib-val xtmnanovg NVG_IMAGE_REPEATX i32 "")
(call-as-xtlang (set! NVG_IMAGE_REPEATX (convert (<< 1 1) NVGimageFlags)) void)
(register-lib-val xtmnanovg NVG_IMAGE_REPEATY i32 "")
(call-as-xtlang (set! NVG_IMAGE_REPEATY (convert (<< 1 2) NVGimageFlags)) void)
(register-lib-val xtmnanovg NVG_IMAGE_FLIPY i32 "")
(call-as-xtlang (set! NVG_IMAGE_FLIPY (convert (<< 1 3) NVGimageFlags)) void)
(register-lib-val xtmnanovg NVG_IMAGE_PREMULTIPLIED i32 "")
(call-as-xtlang (set! NVG_IMAGE_PREMULTIPLIED (convert (<< 1 4) NVGimageFlags)) void)
(llvm:bind-symbol libnanovg "nvgBeginFrame")
(bind-lib libnanovg nvgBeginFrame [void,NVGcontext*,i32,i32,float]*)
(llvm:bind-symbol libnanovg "nvgCancelFrame")
(bind-lib libnanovg nvgCancelFrame [void,NVGcontext*]*)
(llvm:bind-symbol libnanovg "nvgEndFrame")
(bind-lib libnanovg nvgEndFrame [void,NVGcontext*]*)
(llvm:bind-symbol libnanovg "nvgRGB")
(bind-lib libnanovg nvgRGB [NVGcolor,i8,i8,i8]*)
(llvm:bind-symbol libnanovg "nvgRGBf")
(bind-lib libnanovg nvgRGBf [NVGcolor,float,float,float]*)
(llvm:bind-symbol libnanovg "nvgRGBA")
(bind-lib libnanovg nvgRGBA [NVGcolor,i8,i8,i8,i8]*)
(llvm:bind-symbol libnanovg "nvgRGBAf")
(bind-lib libnanovg nvgRGBAf [NVGcolor,float,float,float,float]*)
(llvm:bind-symbol libnanovg "nvgLerpRGBA")
(bind-lib libnanovg nvgLerpRGBA [NVGcolor,NVGcolor,NVGcolor,float]*)
(llvm:bind-symbol libnanovg "nvgTransRGBA")
(bind-lib libnanovg nvgTransRGBA [NVGcolor,NVGcolor,i8]*)
(llvm:bind-symbol libnanovg "nvgTransRGBAf")
(bind-lib libnanovg nvgTransRGBAf [NVGcolor,NVGcolor,float]*)
(llvm:bind-symbol libnanovg "nvgHSL")
(bind-lib libnanovg nvgHSL [NVGcolor,float,float,float]*)
(llvm:bind-symbol libnanovg "nvgHSLA")
(bind-lib libnanovg nvgHSLA [NVGcolor,float,float,float,i8]*)
(llvm:bind-symbol libnanovg "nvgSave")
(bind-lib libnanovg nvgSave [void,NVGcontext*]*)
(llvm:bind-symbol libnanovg "nvgRestore")
(bind-lib libnanovg nvgRestore [void,NVGcontext*]*)
(llvm:bind-symbol libnanovg "nvgReset")
(bind-lib libnanovg nvgReset [void,NVGcontext*]*)
(llvm:bind-symbol libnanovg "nvgStrokeColor")
(bind-lib libnanovg nvgStrokeColor [void,NVGcontext*,NVGcolor*]*)
(llvm:bind-symbol libnanovg "nvgStrokePaint")
(bind-lib libnanovg nvgStrokePaint [void,NVGcontext*,NVGpaint*]*)
(llvm:bind-symbol libnanovg "nvgFillColor")
(bind-lib libnanovg nvgFillColor [void,NVGcontext*,NVGcolor*]*)
(llvm:bind-symbol libnanovg "nvgFillPaint")
(bind-lib libnanovg nvgFillPaint [void,NVGcontext*,NVGpaint*]*)
(llvm:bind-symbol libnanovg "nvgMiterLimit")
(bind-lib libnanovg nvgMiterLimit [void,NVGcontext*,float]*)
(llvm:bind-symbol libnanovg "nvgStrokeWidth")
(bind-lib libnanovg nvgStrokeWidth [void,NVGcontext*,float]*)
(llvm:bind-symbol libnanovg "nvgLineCap")
(bind-lib libnanovg nvgLineCap [void,NVGcontext*,i32]*)
(llvm:bind-symbol libnanovg "nvgLineJoin")
(bind-lib libnanovg nvgLineJoin [void,NVGcontext*,i32]*)
(llvm:bind-symbol libnanovg "nvgGlobalAlpha")
(bind-lib libnanovg nvgGlobalAlpha [void,NVGcontext*,float]*)
(llvm:bind-symbol libnanovg "nvgResetTransform")
(bind-lib libnanovg nvgResetTransform [void,NVGcontext*]*)
(llvm:bind-symbol libnanovg "nvgTransform")
(bind-lib libnanovg nvgTransform [void,NVGcontext*,float,float,float,float,float,float]*)
(llvm:bind-symbol libnanovg "nvgTranslate")
(bind-lib libnanovg nvgTranslate [void,NVGcontext*,float,float]*)
(llvm:bind-symbol libnanovg "nvgRotate")
(bind-lib libnanovg nvgRotate [void,NVGcontext*,float]*)
(llvm:bind-symbol libnanovg "nvgSkewX")
(bind-lib libnanovg nvgSkewX [void,NVGcontext*,float]*)
(llvm:bind-symbol libnanovg "nvgSkewY")
(bind-lib libnanovg nvgSkewY [void,NVGcontext*,float]*)
(llvm:bind-symbol libnanovg "nvgScale")
(bind-lib libnanovg nvgScale [void,NVGcontext*,float,float]*)
(llvm:bind-symbol libnanovg "nvgCurrentTransform")
(bind-lib libnanovg nvgCurrentTransform [void,NVGcontext*,float*]*)
(llvm:bind-symbol libnanovg "nvgTransformIdentity")
(bind-lib libnanovg nvgTransformIdentity [void,float*]*)
(llvm:bind-symbol libnanovg "nvgTransformTranslate")
(bind-lib libnanovg nvgTransformTranslate [void,float*,float,float]*)
(llvm:bind-symbol libnanovg "nvgTransformScale")
(bind-lib libnanovg nvgTransformScale [void,float*,float,float]*)
(llvm:bind-symbol libnanovg "nvgTransformRotate")
(bind-lib libnanovg nvgTransformRotate [void,float*,float]*)
(llvm:bind-symbol libnanovg "nvgTransformSkewX")
(bind-lib libnanovg nvgTransformSkewX [void,float*,float]*)
(llvm:bind-symbol libnanovg "nvgTransformSkewY")
(bind-lib libnanovg nvgTransformSkewY [void,float*,float]*)
(llvm:bind-symbol libnanovg "nvgTransformMultiply")
(bind-lib libnanovg nvgTransformMultiply [void,float*,float*]*)
(llvm:bind-symbol libnanovg "nvgTransformPremultiply")
(bind-lib libnanovg nvgTransformPremultiply [void,float*,float*]*)
(llvm:bind-symbol libnanovg "nvgTransformInverse")
(bind-lib libnanovg nvgTransformInverse [i32,float*,float*]*)
(llvm:bind-symbol libnanovg "nvgTransformPoint")
(bind-lib libnanovg nvgTransformPoint [void,float*,float*,float*,float,float]*)
(llvm:bind-symbol libnanovg "nvgDegToRad")
(bind-lib libnanovg nvgDegToRad [float,float]*)
(llvm:bind-symbol libnanovg "nvgRadToDeg")
(bind-lib libnanovg nvgRadToDeg [float,float]*)
(llvm:bind-symbol libnanovg "nvgCreateImage")
(bind-lib libnanovg nvgCreateImage [i32,NVGcontext*,i8*,i32]*)
(llvm:bind-symbol libnanovg "nvgCreateImageMem")
(bind-lib libnanovg nvgCreateImageMem [i32,NVGcontext*,i32,i8*,i32]*)
(llvm:bind-symbol libnanovg "nvgCreateImageRGBA")
(bind-lib libnanovg nvgCreateImageRGBA [i32,NVGcontext*,i32,i32,i32,i8*]*)
(llvm:bind-symbol libnanovg "nvgUpdateImage")
(bind-lib libnanovg nvgUpdateImage [void,NVGcontext*,i32,i8*]*)
(llvm:bind-symbol libnanovg "nvgImageSize")
(bind-lib libnanovg nvgImageSize [void,NVGcontext*,i32,i32*,i32*]*)
(llvm:bind-symbol libnanovg "nvgDeleteImage")
(bind-lib libnanovg nvgDeleteImage [void,NVGcontext*,i32]*)
(llvm:bind-symbol libnanovg "nvgLinearGradient")
(bind-lib libnanovg nvgLinearGradient [NVGpaint*,NVGcontext*,float,float,float,float,NVGcolor*,NVGcolor*]*)
(llvm:bind-symbol libnanovg "nvgBoxGradient")
(bind-lib libnanovg nvgBoxGradient [NVGpaint*,NVGcontext*,float,float,float,float,float,float,NVGcolor*,NVGcolor*]*)
(llvm:bind-symbol libnanovg "nvgRadialGradient")
(bind-lib libnanovg nvgRadialGradient [NVGpaint*,NVGcontext*,float,float,float,float,NVGcolor*,NVGcolor*]*)
(llvm:bind-symbol libnanovg "nvgImagePattern")
(bind-lib libnanovg nvgImagePattern [NVGpaint*,NVGcontext*,float,float,float,float,float,i32,float]*)
(llvm:bind-symbol libnanovg "nvgScissor")
(bind-lib libnanovg nvgScissor [void,NVGcontext*,float,float,float,float]*)
(llvm:bind-symbol libnanovg "nvgIntersectScissor")
(bind-lib libnanovg nvgIntersectScissor [void,NVGcontext*,float,float,float,float]*)
(llvm:bind-symbol libnanovg "nvgResetScissor")
(bind-lib libnanovg nvgResetScissor [void,NVGcontext*]*)
(llvm:bind-symbol libnanovg "nvgBeginPath")
(bind-lib libnanovg nvgBeginPath [void,NVGcontext*]*)
(llvm:bind-symbol libnanovg "nvgMoveTo")
(bind-lib libnanovg nvgMoveTo [void,NVGcontext*,float,float]*)
(llvm:bind-symbol libnanovg "nvgLineTo")
(bind-lib libnanovg nvgLineTo [void,NVGcontext*,float,float]*)
(llvm:bind-symbol libnanovg "nvgBezierTo")
(bind-lib libnanovg nvgBezierTo [void,NVGcontext*,float,float,float,float,float,float]*)
(llvm:bind-symbol libnanovg "nvgQuadTo")
(bind-lib libnanovg nvgQuadTo [void,NVGcontext*,float,float,float,float]*)
(llvm:bind-symbol libnanovg "nvgArcTo")
(bind-lib libnanovg nvgArcTo [void,NVGcontext*,float,float,float,float,float]*)
(llvm:bind-symbol libnanovg "nvgClosePath")
(bind-lib libnanovg nvgClosePath [void,NVGcontext*]*)
(llvm:bind-symbol libnanovg "nvgPathWinding")
(bind-lib libnanovg nvgPathWinding [void,NVGcontext*,i32]*)
(llvm:bind-symbol libnanovg "nvgArc")
(bind-lib libnanovg nvgArc [void,NVGcontext*,float,float,float,float,float,i32]*)
(llvm:bind-symbol libnanovg "nvgRect")
(bind-lib libnanovg nvgRect [void,NVGcontext*,float,float,float,float]*)
(llvm:bind-symbol libnanovg "nvgRoundedRect")
(bind-lib libnanovg nvgRoundedRect [void,NVGcontext*,float,float,float,float,float]*)
(llvm:bind-symbol libnanovg "nvgRoundedRectVarying")
(bind-lib libnanovg nvgRoundedRectVarying [void,NVGcontext*,float,float,float,float,float,float,float,float]*)
(llvm:bind-symbol libnanovg "nvgEllipse")
(bind-lib libnanovg nvgEllipse [void,NVGcontext*,float,float,float,float]*)
(llvm:bind-symbol libnanovg "nvgCircle")
(bind-lib libnanovg nvgCircle [void,NVGcontext*,float,float,float]*)
(llvm:bind-symbol libnanovg "nvgFill")
(bind-lib libnanovg nvgFill [void,NVGcontext*]*)
(llvm:bind-symbol libnanovg "nvgStroke")
(bind-lib libnanovg nvgStroke [void,NVGcontext*]*)
(llvm:bind-symbol libnanovg "nvgCreateFont")
(bind-lib libnanovg nvgCreateFont [i32,NVGcontext*,i8*,i8*]*)
(llvm:bind-symbol libnanovg "nvgCreateFontMem")
(bind-lib libnanovg nvgCreateFontMem [i32,NVGcontext*,i8*,i8*,i32,i32]*)
(llvm:bind-symbol libnanovg "nvgFindFont")
(bind-lib libnanovg nvgFindFont [i32,NVGcontext*,i8*]*)
(llvm:bind-symbol libnanovg "nvgFontSize")
(bind-lib libnanovg nvgFontSize [void,NVGcontext*,float]*)
(llvm:bind-symbol libnanovg "nvgFontBlur")
(bind-lib libnanovg nvgFontBlur [void,NVGcontext*,float]*)
(llvm:bind-symbol libnanovg "nvgTextLetterSpacing")
(bind-lib libnanovg nvgTextLetterSpacing [void,NVGcontext*,float]*)
(llvm:bind-symbol libnanovg "nvgTextLineHeight")
(bind-lib libnanovg nvgTextLineHeight [void,NVGcontext*,float]*)
(llvm:bind-symbol libnanovg "nvgTextAlign")
(bind-lib libnanovg nvgTextAlign [void,NVGcontext*,i32]*)
(llvm:bind-symbol libnanovg "nvgFontFaceId")
(bind-lib libnanovg nvgFontFaceId [void,NVGcontext*,i32]*)
(llvm:bind-symbol libnanovg "nvgFontFace")
(bind-lib libnanovg nvgFontFace [void,NVGcontext*,i8*]*)
(llvm:bind-symbol libnanovg "nvgAddFallbackFontId")
(bind-lib libnanovg nvgAddFallbackFontId [i32,NVGcontext*,i32,i32]*)
(llvm:bind-symbol libnanovg "nvgAddFallbackFont")
(bind-lib libnanovg nvgAddFallbackFont [i32,NVGcontext*,i8*,i8*]*)
(llvm:bind-symbol libnanovg "nvgText")
(bind-lib libnanovg nvgText [float,NVGcontext*,float,float,i8*,i8*]*)
(llvm:bind-symbol libnanovg "nvgTextBox")
(bind-lib libnanovg nvgTextBox [void,NVGcontext*,float,float,float,i8*,i8*]*)
(llvm:bind-symbol libnanovg "nvgTextBounds")
(bind-lib libnanovg nvgTextBounds [float,NVGcontext*,float,float,i8*,i8*,float*]*)
(llvm:bind-symbol libnanovg "nvgTextBoxBounds")
(bind-lib libnanovg nvgTextBoxBounds [void,NVGcontext*,float,float,float,i8*,i8*,float*]*)
(llvm:bind-symbol libnanovg "nvgTextGlyphPositions")
(bind-lib libnanovg nvgTextGlyphPositions [i32,NVGcontext*,float,float,i8*,i8*,NVGglyphPosition*,i32]*)
(llvm:bind-symbol libnanovg "nvgTextMetrics")
(bind-lib libnanovg nvgTextMetrics [void,NVGcontext*,float*,float*,float*]*)
(llvm:bind-symbol libnanovg "nvgTextBreakLines")
(bind-lib libnanovg nvgTextBreakLines [i32,NVGcontext*,i8*,i8*,float,NVGtextRow*,i32]*)
(bind-alias NVGtexture i32 "")
(register-lib-val xtmnanovg NVG_TEXTURE_ALPHA i32 "")
(register-lib-val xtmnanovg NVG_TEXTURE_RGBA i32 "")
(register-lib-type xtmnanovg NVGscissor <float,float> "")
(register-lib-func xtmnanovg NVGscissor_adhoc_W05WR3NjaXNzb3IqLGZsb2F0LGZsb2F0XQ [NVGscissor*,float,float]* 0 "" '(let ((NVGscissor_adhoc_45 (lambda (arg_0 arg_1) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) obj)))) NVGscissor_adhoc_45))
(bind-poly NVGscissor NVGscissor_adhoc_W05WR3NjaXNzb3IqLGZsb2F0LGZsb2F0XQ "")
(register-lib-func xtmnanovg NVGscissor_z_adhoc_W05WR3NjaXNzb3IqLGZsb2F0LGZsb2F0XQ [NVGscissor*,float,float]* 0 "" '(let ((NVGscissor_z_adhoc_46 (lambda (arg_0 arg_1) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) obj)))) NVGscissor_z_adhoc_46))
(bind-poly NVGscissor_z NVGscissor_z_adhoc_W05WR3NjaXNzb3IqLGZsb2F0LGZsb2F0XQ "")
(register-lib-func xtmnanovg NVGscissor_h_adhoc_W05WR3NjaXNzb3IqLGZsb2F0LGZsb2F0XQ [NVGscissor*,float,float]* 0 "" '(let ((NVGscissor_h_adhoc_47 (lambda (arg_0 arg_1) (let ((obj (halloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) obj)))) NVGscissor_h_adhoc_47))
(bind-poly NVGscissor_h NVGscissor_h_adhoc_W05WR3NjaXNzb3IqLGZsb2F0LGZsb2F0XQ "")
(register-lib-func xtmnanovg toString_adhoc_W1N0cmluZyosTlZHc2Npc3Nvcipd [String*,NVGscissor*]* 0 "" '(let ((toString_adhoc_48 (lambda (x:NVGscissor*) (if (null? x) (sprintout "<NVGscissor:null>") (sprintout "<NVGscissor:" (tref x 0) "," (tref x 1) ">"))))) toString_adhoc_48))
(bind-poly toString toString_adhoc_W1N0cmluZyosTlZHc2Npc3Nvcipd "")
(register-lib-func xtmnanovg print_adhoc_W3ZvaWQsTlZHc2Npc3Nvcipd [void,NVGscissor*]* 0 "" '(let ((print_adhoc_49 (lambda (x:NVGscissor*) (if (null? x) (printout "<NVGscissor:null>") (printout "<NVGscissor:" (tref x 0) "," (tref x 1) ">")) void))) print_adhoc_49))
(bind-poly print print_adhoc_W3ZvaWQsTlZHc2Npc3Nvcipd "")
(register-lib-func xtmnanovg NVGscissor_val_adhoc_W05WR3NjaXNzb3IsZmxvYXQsZmxvYXRd [NVGscissor,float,float]* 0 "" '(let ((NVGscissor_val_adhoc_50 (lambda (arg_0 arg_1) (let ((obj:NVGscissor* (salloc))) (tfill! obj arg_0 arg_1) (pref obj 0))))) NVGscissor_val_adhoc_50))
(bind-poly NVGscissor_val NVGscissor_val_adhoc_W05WR3NjaXNzb3IsZmxvYXQsZmxvYXRd "")
(register-lib-func xtmnanovg hcopy_adhoc_W05WR3NjaXNzb3IqLE5WR3NjaXNzb3IqXQ [NVGscissor*,NVGscissor*]* 0 "" '(let ((hcopy_adhoc_51 (lambda (x:NVGscissor*) (let ((obj (halloc))) (tset! obj 0 (tref x 0)) (tset! obj 1 (tref x 1)) obj)))) hcopy_adhoc_51))
(bind-poly hcopy hcopy_adhoc_W05WR3NjaXNzb3IqLE5WR3NjaXNzb3IqXQ "")
(register-lib-func xtmnanovg hfree_adhoc_W3ZvaWQsTlZHc2Npc3Nvcipd [void,NVGscissor*]* 0 "" '(let ((hfree_adhoc_52 (lambda (x:NVGscissor*) () () (free x) void))) hfree_adhoc_52))
(bind-poly hfree hfree_adhoc_W3ZvaWQsTlZHc2Npc3Nvcipd "")
(register-lib-func xtmnanovg zcopy_adhoc_W05WR3NjaXNzb3IqLE5WR3NjaXNzb3IqLG16b25lKixtem9uZSpd [NVGscissor*,NVGscissor*,mzone*,mzone*]* 0 "" '(let ((zcopy_adhoc_53 (lambda (x:NVGscissor* fromz toz) (if (llvm_ptr_in_zone fromz (cast x i8*)) (begin (push_zone toz) (let ((obj (zalloc))) (begin (tset! obj 0 (tref x 0))) (begin (tset! obj 1 (tref x 1))) (pop_zone) obj)) x)))) zcopy_adhoc_53))
(bind-poly zcopy zcopy_adhoc_W05WR3NjaXNzb3IqLE5WR3NjaXNzb3IqLG16b25lKixtem9uZSpd "")
(register-lib-type xtmnanovg NVGvertex <float,float,float,float> "")
(register-lib-func xtmnanovg NVGvertex_adhoc_W05WR3ZlcnRleCosZmxvYXQsZmxvYXQsZmxvYXQsZmxvYXRd [NVGvertex*,float,float,float,float]* 0 "" '(let ((NVGvertex_adhoc_54 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) obj)))) NVGvertex_adhoc_54))
(bind-poly NVGvertex NVGvertex_adhoc_W05WR3ZlcnRleCosZmxvYXQsZmxvYXQsZmxvYXQsZmxvYXRd "")
(register-lib-func xtmnanovg NVGvertex_z_adhoc_W05WR3ZlcnRleCosZmxvYXQsZmxvYXQsZmxvYXQsZmxvYXRd [NVGvertex*,float,float,float,float]* 0 "" '(let ((NVGvertex_z_adhoc_55 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) obj)))) NVGvertex_z_adhoc_55))
(bind-poly NVGvertex_z NVGvertex_z_adhoc_W05WR3ZlcnRleCosZmxvYXQsZmxvYXQsZmxvYXQsZmxvYXRd "")
(register-lib-func xtmnanovg NVGvertex_h_adhoc_W05WR3ZlcnRleCosZmxvYXQsZmxvYXQsZmxvYXQsZmxvYXRd [NVGvertex*,float,float,float,float]* 0 "" '(let ((NVGvertex_h_adhoc_56 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj (halloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) obj)))) NVGvertex_h_adhoc_56))
(bind-poly NVGvertex_h NVGvertex_h_adhoc_W05WR3ZlcnRleCosZmxvYXQsZmxvYXQsZmxvYXQsZmxvYXRd "")
(register-lib-func xtmnanovg toString_adhoc_W1N0cmluZyosTlZHdmVydGV4Kl0 [String*,NVGvertex*]* 0 "" '(let ((toString_adhoc_57 (lambda (x:NVGvertex*) (if (null? x) (sprintout "<NVGvertex:null>") (sprintout "<NVGvertex:" (tref x 0) "," (tref x 1) "," (tref x 2) "," (tref x 3) ">"))))) toString_adhoc_57))
(bind-poly toString toString_adhoc_W1N0cmluZyosTlZHdmVydGV4Kl0 "")
(register-lib-func xtmnanovg print_adhoc_W3ZvaWQsTlZHdmVydGV4Kl0 [void,NVGvertex*]* 0 "" '(let ((print_adhoc_58 (lambda (x:NVGvertex*) (if (null? x) (printout "<NVGvertex:null>") (printout "<NVGvertex:" (tref x 0) "," (tref x 1) "," (tref x 2) "," (tref x 3) ">")) void))) print_adhoc_58))
(bind-poly print print_adhoc_W3ZvaWQsTlZHdmVydGV4Kl0 "")
(register-lib-func xtmnanovg NVGvertex_val_adhoc_W05WR3ZlcnRleCxmbG9hdCxmbG9hdCxmbG9hdCxmbG9hdF0 [NVGvertex,float,float,float,float]* 0 "" '(let ((NVGvertex_val_adhoc_59 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj:NVGvertex* (salloc))) (tfill! obj arg_0 arg_1 arg_2 arg_3) (pref obj 0))))) NVGvertex_val_adhoc_59))
(bind-poly NVGvertex_val NVGvertex_val_adhoc_W05WR3ZlcnRleCxmbG9hdCxmbG9hdCxmbG9hdCxmbG9hdF0 "")
(register-lib-func xtmnanovg hcopy_adhoc_W05WR3ZlcnRleCosTlZHdmVydGV4Kl0 [NVGvertex*,NVGvertex*]* 0 "" '(let ((hcopy_adhoc_60 (lambda (x:NVGvertex*) (let ((obj (halloc))) (tset! obj 0 (tref x 0)) (tset! obj 1 (tref x 1)) (tset! obj 2 (tref x 2)) (tset! obj 3 (tref x 3)) obj)))) hcopy_adhoc_60))
(bind-poly hcopy hcopy_adhoc_W05WR3ZlcnRleCosTlZHdmVydGV4Kl0 "")
(register-lib-func xtmnanovg hfree_adhoc_W3ZvaWQsTlZHdmVydGV4Kl0 [void,NVGvertex*]* 0 "" '(let ((hfree_adhoc_61 (lambda (x:NVGvertex*) () () () () (free x) void))) hfree_adhoc_61))
(bind-poly hfree hfree_adhoc_W3ZvaWQsTlZHdmVydGV4Kl0 "")
(register-lib-func xtmnanovg zcopy_adhoc_W05WR3ZlcnRleCosTlZHdmVydGV4Kixtem9uZSosbXpvbmUqXQ [NVGvertex*,NVGvertex*,mzone*,mzone*]* 0 "" '(let ((zcopy_adhoc_62 (lambda (x:NVGvertex* fromz toz) (if (llvm_ptr_in_zone fromz (cast x i8*)) (begin (push_zone toz) (let ((obj (zalloc))) (begin (tset! obj 0 (tref x 0))) (begin (tset! obj 1 (tref x 1))) (begin (tset! obj 2 (tref x 2))) (begin (tset! obj 3 (tref x 3))) (pop_zone) obj)) x)))) zcopy_adhoc_62))
(bind-poly zcopy zcopy_adhoc_W05WR3ZlcnRleCosTlZHdmVydGV4Kixtem9uZSosbXpvbmUqXQ "")
(register-lib-type xtmnanovg NVGpath <i32,i32,i8,i32,NVGvertex*,i32,NVGvertex*,i32,i32,i32> "")
(register-lib-func xtmnanovg NVGpath_adhoc_W05WR3BhdGgqLGkzMixpMzIsaTgsaTMyLE5WR3ZlcnRleCosaTMyLE5WR3ZlcnRleCosaTMyLGkzMixpMzJd [NVGpath*,i32,i32,i8,i32,NVGvertex*,i32,NVGvertex*,i32,i32,i32]* 0 "" '(let ((NVGpath_adhoc_63 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4 arg_5 arg_6 arg_7 arg_8 arg_9) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) (tset! obj 5 arg_5) (tset! obj 6 arg_6) (tset! obj 7 arg_7) (tset! obj 8 arg_8) (tset! obj 9 arg_9) obj)))) NVGpath_adhoc_63))
(bind-poly NVGpath NVGpath_adhoc_W05WR3BhdGgqLGkzMixpMzIsaTgsaTMyLE5WR3ZlcnRleCosaTMyLE5WR3ZlcnRleCosaTMyLGkzMixpMzJd "")
(register-lib-func xtmnanovg NVGpath_z_adhoc_W05WR3BhdGgqLGkzMixpMzIsaTgsaTMyLE5WR3ZlcnRleCosaTMyLE5WR3ZlcnRleCosaTMyLGkzMixpMzJd [NVGpath*,i32,i32,i8,i32,NVGvertex*,i32,NVGvertex*,i32,i32,i32]* 0 "" '(let ((NVGpath_z_adhoc_64 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4 arg_5 arg_6 arg_7 arg_8 arg_9) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) (tset! obj 5 arg_5) (tset! obj 6 arg_6) (tset! obj 7 arg_7) (tset! obj 8 arg_8) (tset! obj 9 arg_9) obj)))) NVGpath_z_adhoc_64))
(bind-poly NVGpath_z NVGpath_z_adhoc_W05WR3BhdGgqLGkzMixpMzIsaTgsaTMyLE5WR3ZlcnRleCosaTMyLE5WR3ZlcnRleCosaTMyLGkzMixpMzJd "")
(register-lib-func xtmnanovg NVGpath_h_adhoc_W05WR3BhdGgqLGkzMixpMzIsaTgsaTMyLE5WR3ZlcnRleCosaTMyLE5WR3ZlcnRleCosaTMyLGkzMixpMzJd [NVGpath*,i32,i32,i8,i32,NVGvertex*,i32,NVGvertex*,i32,i32,i32]* 0 "" '(let ((NVGpath_h_adhoc_65 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4 arg_5 arg_6 arg_7 arg_8 arg_9) (let ((obj (halloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) (tset! obj 4 arg_4) (tset! obj 5 arg_5) (tset! obj 6 arg_6) (tset! obj 7 arg_7) (tset! obj 8 arg_8) (tset! obj 9 arg_9) obj)))) NVGpath_h_adhoc_65))
(bind-poly NVGpath_h NVGpath_h_adhoc_W05WR3BhdGgqLGkzMixpMzIsaTgsaTMyLE5WR3ZlcnRleCosaTMyLE5WR3ZlcnRleCosaTMyLGkzMixpMzJd "")
(register-lib-func xtmnanovg toString_adhoc_W1N0cmluZyosTlZHcGF0aCpd [String*,NVGpath*]* 0 "" '(let ((toString_adhoc_66 (lambda (x:NVGpath*) (if (null? x) (sprintout "<NVGpath:null>") (sprintout "<NVGpath:" (tref x 0) "," (tref x 1) "," (tref x 2) "," (tref x 3) "," (tref x 4) "," (tref x 5) "," (tref x 6) "," (tref x 7) "," (tref x 8) "," (tref x 9) ">"))))) toString_adhoc_66))
(bind-poly toString toString_adhoc_W1N0cmluZyosTlZHcGF0aCpd "")
(register-lib-func xtmnanovg print_adhoc_W3ZvaWQsTlZHcGF0aCpd [void,NVGpath*]* 0 "" '(let ((print_adhoc_67 (lambda (x:NVGpath*) (if (null? x) (printout "<NVGpath:null>") (printout "<NVGpath:" (tref x 0) "," (tref x 1) "," (tref x 2) "," (tref x 3) "," (tref x 4) "," (tref x 5) "," (tref x 6) "," (tref x 7) "," (tref x 8) "," (tref x 9) ">")) void))) print_adhoc_67))
(bind-poly print print_adhoc_W3ZvaWQsTlZHcGF0aCpd "")
(register-lib-func xtmnanovg NVGpath_val_adhoc_W05WR3BhdGgsaTMyLGkzMixpOCxpMzIsTlZHdmVydGV4KixpMzIsTlZHdmVydGV4KixpMzIsaTMyLGkzMl0 [NVGpath,i32,i32,i8,i32,NVGvertex*,i32,NVGvertex*,i32,i32,i32]* 0 "" '(let ((NVGpath_val_adhoc_68 (lambda (arg_0 arg_1 arg_2 arg_3 arg_4 arg_5 arg_6 arg_7 arg_8 arg_9) (let ((obj:NVGpath* (salloc))) (tfill! obj arg_0 arg_1 arg_2 arg_3 arg_4 arg_5 arg_6 arg_7 arg_8 arg_9) (pref obj 0))))) NVGpath_val_adhoc_68))
(bind-poly NVGpath_val NVGpath_val_adhoc_W05WR3BhdGgsaTMyLGkzMixpOCxpMzIsTlZHdmVydGV4KixpMzIsTlZHdmVydGV4KixpMzIsaTMyLGkzMl0 "")
(register-lib-func xtmnanovg hcopy_adhoc_W05WR3BhdGgqLE5WR3BhdGgqXQ [NVGpath*,NVGpath*]* 0 "" '(let ((hcopy_adhoc_69 (lambda (x:NVGpath*) (let ((obj (halloc))) (tset! obj 0 (tref x 0)) (tset! obj 1 (tref x 1)) (tset! obj 2 (tref x 2)) (tset! obj 3 (tref x 3)) (if (not (null? (tref x 4))) (tset! obj 4 (hcopy:[NVGvertex*,NVGvertex*]* (tref x 4)))) (tset! obj 5 (tref x 5)) (if (not (null? (tref x 6))) (tset! obj 6 (hcopy:[NVGvertex*,NVGvertex*]* (tref x 6)))) (tset! obj 7 (tref x 7)) (tset! obj 8 (tref x 8)) (tset! obj 9 (tref x 9)) obj)))) hcopy_adhoc_69))
(bind-poly hcopy hcopy_adhoc_W05WR3BhdGgqLE5WR3BhdGgqXQ "")
(register-lib-func xtmnanovg hfree_adhoc_W3ZvaWQsTlZHcGF0aCpd [void,NVGpath*]* 0 "" '(let ((hfree_adhoc_70 (lambda (x:NVGpath*) () () () () (if (not (null? (tref x 4))) (hfree:[void,NVGvertex*]* (tref x 4))) () (if (not (null? (tref x 6))) (hfree:[void,NVGvertex*]* (tref x 6))) () () () (free x) void))) hfree_adhoc_70))
(bind-poly hfree hfree_adhoc_W3ZvaWQsTlZHcGF0aCpd "")
(register-lib-func xtmnanovg zcopy_adhoc_W05WR3BhdGgqLE5WR3BhdGgqLG16b25lKixtem9uZSpd [NVGpath*,NVGpath*,mzone*,mzone*]* 0 "" '(let ((zcopy_adhoc_71 (lambda (x:NVGpath* fromz toz) (if (llvm_ptr_in_zone fromz (cast x i8*)) (begin (push_zone toz) (let ((obj (zalloc))) (begin (tset! obj 0 (tref x 0))) (begin (tset! obj 1 (tref x 1))) (begin (tset! obj 2 (tref x 2))) (begin (tset! obj 3 (tref x 3))) (if (not (null? (tref x 4))) (tset! obj 4 (zcopy:[NVGvertex*,NVGvertex*,mzone*,mzone*]* (tref x 4) fromz toz))) (begin (tset! obj 5 (tref x 5))) (if (not (null? (tref x 6))) (tset! obj 6 (zcopy:[NVGvertex*,NVGvertex*,mzone*,mzone*]* (tref x 6) fromz toz))) (begin (tset! obj 7 (tref x 7))) (begin (tset! obj 8 (tref x 8))) (begin (tset! obj 9 (tref x 9))) (pop_zone) obj)) x)))) zcopy_adhoc_71))
(bind-poly zcopy zcopy_adhoc_W05WR3BhdGgqLE5WR3BhdGgqLG16b25lKixtem9uZSpd "")
(bind-alias NVGparams i8* "")
(llvm:bind-symbol libnanovg "nvgCreateInternal")
(bind-lib libnanovg nvgCreateInternal [NVGcontext*,NVGparams*]*)
(llvm:bind-symbol libnanovg "nvgDeleteInternal")
(bind-lib libnanovg nvgDeleteInternal [void,NVGcontext*]*)
(llvm:bind-symbol libnanovg "nvgInternalParams")
(bind-lib libnanovg nvgInternalParams [NVGparams*,NVGcontext*]*)
(llvm:bind-symbol libnanovg "nvgDebugDumpPathCache")
(bind-lib libnanovg nvgDebugDumpPathCache [void,NVGcontext*]*)
(bind-alias NVGcreateFlags i32 "")
(register-lib-val xtmnanovg NVG_ANTIALIAS i32 "")
(call-as-xtlang (set! NVG_ANTIALIAS (convert (<< 1 0) NVGcreateFlags)) void)
(register-lib-val xtmnanovg NVG_STENCIL_STROKES i32 "")
(call-as-xtlang (set! NVG_STENCIL_STROKES (convert (<< 1 1) NVGcreateFlags)) void)
(register-lib-val xtmnanovg NVG_DEBUG i32 "")
(call-as-xtlang (set! NVG_DEBUG (convert (<< 1 2) NVGcreateFlags)) void)
(llvm:bind-symbol libnanovg "nvgCreateGL3")
(bind-lib libnanovg nvgCreateGL3 [NVGcontext*,i32]*)
(llvm:bind-symbol libnanovg "nvgDeleteGL3")
(bind-lib libnanovg nvgDeleteGL3 [void,NVGcontext*]*)
(llvm:bind-symbol libnanovg "nvgInit")
(bind-lib libnanovg nvgInit [i32]*)
(register-lib-func xtmnanovg nvg_init_adhoc_W2kzMl0 [i32]* 0 "" '(let ((nvg_init_adhoc_72 (lambda () (nvgInit)))) nvg_init_adhoc_72))
(bind-poly nvg_init nvg_init_adhoc_W2kzMl0 "")
(register-lib-func xtmnanovg nvg_create_font_adhoc_W2kzMixpOCosaTgqLGk4Kl0 [i32,i8*,i8*,i8*]* 0 "" '(let ((nvg_create_font_adhoc_73 (lambda (vg font_name font_path) (nvgCreateFont vg font_name font_path)))) nvg_create_font_adhoc_73))
(bind-poly nvg_create_font nvg_create_font_adhoc_W2kzMixpOCosaTgqLGk4Kl0 "")
(register-lib-func xtmnanovg nvg_create_context_adhoc_W2k4Kl0 [i8*]* 0 "" '(let ((nvg_create_context_adhoc_74 (lambda () (glEnable GL_STENCIL_TEST) (nvgCreateGL3 (+ NVG_ANTIALIAS NVG_STENCIL_STROKES NVG_DEBUG))))) nvg_create_context_adhoc_74))
(bind-poly nvg_create_context nvg_create_context_adhoc_W2k4Kl0 "")
(register-lib-func xtmnanovg nvg_clear_adhoc_W3ZvaWRd [void]* 0 "" '(let ((nvg_clear_adhoc_75 (lambda () (glClear (bitwise-or GL_COLOR_BUFFER_BIT GL_DEPTH_BUFFER_BIT GL_STENCIL_BUFFER_BIT))))) nvg_clear_adhoc_75))
(bind-poly nvg_clear nvg_clear_adhoc_W3ZvaWRd "")
(register-lib-type xtmnanovg Rect <float,float,float,float> "")
(register-lib-func xtmnanovg Rect_adhoc_W1JlY3QqLGZsb2F0LGZsb2F0LGZsb2F0LGZsb2F0XQ [Rect*,float,float,float,float]* 0 "" '(let ((Rect_adhoc_76 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) obj)))) Rect_adhoc_76))
(bind-poly Rect Rect_adhoc_W1JlY3QqLGZsb2F0LGZsb2F0LGZsb2F0LGZsb2F0XQ "")
(register-lib-func xtmnanovg Rect_z_adhoc_W1JlY3QqLGZsb2F0LGZsb2F0LGZsb2F0LGZsb2F0XQ [Rect*,float,float,float,float]* 0 "" '(let ((Rect_z_adhoc_77 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj (zalloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) obj)))) Rect_z_adhoc_77))
(bind-poly Rect_z Rect_z_adhoc_W1JlY3QqLGZsb2F0LGZsb2F0LGZsb2F0LGZsb2F0XQ "")
(register-lib-func xtmnanovg Rect_h_adhoc_W1JlY3QqLGZsb2F0LGZsb2F0LGZsb2F0LGZsb2F0XQ [Rect*,float,float,float,float]* 0 "" '(let ((Rect_h_adhoc_78 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj (halloc))) (tset! obj 0 arg_0) (tset! obj 1 arg_1) (tset! obj 2 arg_2) (tset! obj 3 arg_3) obj)))) Rect_h_adhoc_78))
(bind-poly Rect_h Rect_h_adhoc_W1JlY3QqLGZsb2F0LGZsb2F0LGZsb2F0LGZsb2F0XQ "")
(register-lib-func xtmnanovg Rect_val_adhoc_W1JlY3QsZmxvYXQsZmxvYXQsZmxvYXQsZmxvYXRd [Rect,float,float,float,float]* 0 "" '(let ((Rect_val_adhoc_79 (lambda (arg_0 arg_1 arg_2 arg_3) (let ((obj:Rect* (salloc))) (tfill! obj arg_0 arg_1 arg_2 arg_3) (pref obj 0))))) Rect_val_adhoc_79))
(bind-poly Rect_val Rect_val_adhoc_W1JlY3QsZmxvYXQsZmxvYXQsZmxvYXQsZmxvYXRd "")
(register-lib-func xtmnanovg hcopy_adhoc_W1JlY3QqLFJlY3QqXQ [Rect*,Rect*]* 0 "" '(let ((hcopy_adhoc_80 (lambda (x:Rect*) (let ((obj (halloc))) (tset! obj 0 (tref x 0)) (tset! obj 1 (tref x 1)) (tset! obj 2 (tref x 2)) (tset! obj 3 (tref x 3)) obj)))) hcopy_adhoc_80))
(bind-poly hcopy hcopy_adhoc_W1JlY3QqLFJlY3QqXQ "")
(register-lib-func xtmnanovg hfree_adhoc_W3ZvaWQsUmVjdCpd [void,Rect*]* 0 "" '(let ((hfree_adhoc_81 (lambda (x:Rect*) () () () () (free x) void))) hfree_adhoc_81))
(bind-poly hfree hfree_adhoc_W3ZvaWQsUmVjdCpd "")
(register-lib-func xtmnanovg zcopy_adhoc_W1JlY3QqLFJlY3QqLG16b25lKixtem9uZSpd [Rect*,Rect*,mzone*,mzone*]* 0 "" '(let ((zcopy_adhoc_82 (lambda (x:Rect* fromz toz) (if (llvm_ptr_in_zone fromz (cast x i8*)) (begin (push_zone toz) (let ((obj (zalloc))) (begin (tset! obj 0 (tref x 0))) (begin (tset! obj 1 (tref x 1))) (begin (tset! obj 2 (tref x 2))) (begin (tset! obj 3 (tref x 3))) (pop_zone) obj)) x)))) zcopy_adhoc_82))
(bind-poly zcopy zcopy_adhoc_W1JlY3QqLFJlY3QqLG16b25lKixtem9uZSpd "")
(register-lib-func xtmnanovg print_adhoc_W3ZvaWQsUmVjdCpd [void,Rect*]* 0 "specialised print function for Rect*" '(let ((print_adhoc_83 (lambda (rct:Rect*) (if (null? rct) (printf "<Rect 0x0>") (printf "<Rect: x=%.3f y=%.3f w=%.3f h=%.3f>" (convert (tref rct 0) double) (convert (tref rct 1) double) (convert (tref rct 2) double) (convert (tref rct 3) double))) void))) print_adhoc_83))
(bind-poly print print_adhoc_W3ZvaWQsUmVjdCpd "")
(register-lib-func xtmnanovg toString_adhoc_W1N0cmluZyosUmVjdCpd [String*,Rect*]* 0 "specialised toString function for Rect*" '(let ((toString_adhoc_84 (lambda (rct:Rect*) (let ((str:i8* (salloc 256))) (if (null? rct) (sprintf str "<Rect 0x0>") (sprintf str "<Rect: x=%.3f y=%.3f w=%.3f h=%.3f>" (convert (tref rct 0) double) (convert (tref rct 1) double) (convert (tref rct 2) double) (convert (tref rct 3) double))) (Str str))))) toString_adhoc_84))
(bind-poly toString toString_adhoc_W1N0cmluZyosUmVjdCpd "")
(register-lib-func xtmnanovg nvg_load_opensans_fonts_adhoc_W2kxLGk4KixpOCpd [i1,i8*,i8*]* 0 "Load OpenSans .ttf fonts in opensans_dir\r\n\r\nIf you don't have OpenSans on your system, you can download it for free from http://www.fontsquirrel.com/fonts/open-sans" '(let ((nvg_load_opensans_fonts_adhoc_85 (lambda (vg opensans_dir:i8*) (let ((path:i8* (zalloc 256)) (create_font (lambda (name:i8*) (sprintf path "%s/OpenSans-%s.ttf" opensans_dir name) (nvgCreateFont vg name path)))) (cond ((< (create_font "Bold") 0) (println "couldn't load font OpenSans-Bold.ttf") 0:i1) ((< (create_font "BoldItalic") 0) (println "couldn't load font OpenSans-BoldItalic.ttf") 0:i1) ((< (create_font "ExtraBold") 0) (println "couldn't load font OpenSans-ExtraBold.ttf") 0:i1) ((< (create_font "ExtraBoldItalic") 0) (println "couldn't load font OpenSans-ExtraBoldItalic.ttf") 0:i1) ((< (create_font "Italic") 0) (println "couldn't load font OpenSans-Italic.ttf") 0:i1) ((< (create_font "Light") 0) (println "couldn't load font OpenSans-Light.ttf") 0:i1) ((< (create_font "LightItalic") 0) (println "couldn't load font OpenSans-LightItalic.ttf") 0:i1) ((< (create_font "Regular") 0) (println "couldn't load font OpenSans-Regular.ttf") 0:i1) ((< (create_font "Semibold") 0) (println "couldn't load font OpenSans-Semibold.ttf") 0:i1) ((< (create_font "SemiboldItalic") 0) (println "couldn't load font OpenSans-SemiboldItalic.ttf") 0:i1) (else (println "OpenSans fonts successfully loaded") 1:i1)))))) nvg_load_opensans_fonts_adhoc_85))
(bind-poly nvg_load_opensans_fonts nvg_load_opensans_fonts_adhoc_W2kxLGk4KixpOCpd "")
(register-lib-func xtmnanovg nvg_draw_text_adhoc_W3ZvaWQsaTgqLFN0cmluZyosUmVjdCosU3RyaW5nKixmbG9hdF0 [void,i8*,String*,Rect*,String*,float]* 0 "" '(let ((nvg_draw_text_adhoc_86 (lambda (vg text:String* bounds:Rect* face:String* font_size) (let ((h (tref bounds 3)) (textbox_height font_size) (b_ptr:float* (salloc 4))) (nvgTextAlign vg (bor NVG_ALIGN_BOTTOM NVG_ALIGN_CENTER)) (nvgFontFace vg (cstring face)) (nvgFontSize vg font_size) (nvgTextBoxBounds vg (tref bounds 0) (tref bounds 1) (tref bounds 2) (cstring text) null b_ptr) (set! textbox_height (- (pref b_ptr 3) (pref b_ptr 1))) (nvgTextBox vg (tref bounds 0) (+ (tref bounds 1) (/ (+ (tref bounds 3) textbox_height) 2.0000000000000000000)) (tref bounds 2) (cstring text) null))))) nvg_draw_text_adhoc_86))
(bind-poly nvg_draw_text nvg_draw_text_adhoc_W3ZvaWQsaTgqLFN0cmluZyosUmVjdCosU3RyaW5nKixmbG9hdF0 "")
(print-with-colors 'green 'default #t (print "done"))(print " in" (- (clock:clock) *xtmlib-nanovg-loaded-timer*) "seconds\n")
(define *xtmlib-nanovg-loaded-timer* (clock:clock))
(set! *impc:compiler:message:level* *impc:aot:prev-compiler-message-level*)
